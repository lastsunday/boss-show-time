{"version":3,"file":"offscreen.js","mappings":"uBACIA,EAAsB,CAG1BA,E,GCHAA,EAAyBC,GAEZA,EAAU,MCHvBD,EAAwB,CAACE,EAAKC,IAAUC,OAAOC,UAAUC,eAAeC,KAAKL,EAAKC,GCAlFH,EAAwB,MCAxBA,EAAoBQ,EAAIC,SAASC,SAAWC,KAAKC,SAASC,KCG1D,MAAMC,EAAS,IAAIC,OACjB,IAAIC,IAAI,kBACR,CAAEC,UAAM,IAGVH,EAAOI,UAAY,SAAUC,GAC3B,IAaoCC,EAbhCC,EAAUF,EAAMC,KAAKA,KACuCE,KAAKC,UAAUF,GAY3CD,EAXPC,EAY7BG,OAAOC,QAAQC,YAAY,CACvBT,KAboB,KAcpBU,OAAQ,aACRP,SAd6DE,KAAKC,UAAUF,EAClF,EAEAG,OAAOC,QAAQG,UAAUC,aAAaV,IACpC,IAAIE,EAAUF,EAAMC,KACgDE,KAAKC,UAAUF,GACnFP,EAAOgB,YAAYT,GAC0CC,KAAKC,UAAUF,EAAS,G","sources":["webpack://boss-show-time/webpack/bootstrap","webpack://boss-show-time/webpack/runtime/get javascript chunk filename","webpack://boss-show-time/webpack/runtime/hasOwnProperty shorthand","webpack://boss-show-time/webpack/runtime/publicPath","webpack://boss-show-time/webpack/runtime/jsonp chunk loading","webpack://boss-show-time/./src/offscreen/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"./\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t522: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import {debugLog} from \"../log\";\ndebugLog(\"offscreen ready\");\n\nconst worker = new Worker(\n  new URL(\"./worker.js\", import.meta.url),\n  { type: \"module\" },\n);\n\nworker.onmessage = function (event) {\n  var message = event.data.data;\n  debugLog(\"[offscreen][receive][worker -> offscreen] message = \"+JSON.stringify(message));\n  sendMessageToBackground(\"db\",message);\n  debugLog(\"[offscreen][send][offscreen -> background] message = \"+JSON.stringify(message));\n};\n\nchrome.runtime.onMessage.addListener((event)=>{\n  var message = event.data;\n  debugLog(\"[offscreen][receive][background -> offscreen] message = \"+JSON.stringify(message));\n  worker.postMessage(message);\n  debugLog(\"[offscreen][send][offscreen -> worker] message = \"+JSON.stringify(message));\n});\n\nfunction sendMessageToBackground(type,data){\n  chrome.runtime.sendMessage({\n      type,\n      target: 'background',\n      data\n  });\n};\n"],"names":["__webpack_require__","chunkId","obj","prop","Object","prototype","hasOwnProperty","call","b","document","baseURI","self","location","href","worker","Worker","URL","type","onmessage","event","data","message","JSON","stringify","chrome","runtime","sendMessage","target","onMessage","addListener","postMessage"],"sourceRoot":""}