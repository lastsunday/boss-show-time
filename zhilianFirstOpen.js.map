{"version":3,"file":"zhilianFirstOpen.js","mappings":"oBAGC,WACG,MAAMA,EAAWC,SAASC,cAAc,kBAAkBF,UACpD,aAAEG,EAAe,IAAOC,OAAOC,kBACjCL,GAAaG,GAAuC,IAAvBA,EAAaG,OAE9CH,EAAaI,SAAQ,CAACC,EAAMC,KACxB,MAAM,iBACFC,GACCF,EACCG,EAAMX,IAAWS,GACvB,IAAIE,EAAK,OACT,IAAIC,ECsCL,SAAmBC,GACtB,MAAMC,EAAMb,SAASc,cAAc,OAGnC,OAFAD,EAAIE,UAAUC,IAAI,qBAClBH,EAAII,UAAYL,EACTC,CACX,CD3CkBK,CAAU,QAAQT,KAC5BC,EAAIS,YAAYR,EAAI,GAE3B,CAdA,E","sources":["webpack://boss-show-time/./src/plantforms/zhilian/firstOpen.js","webpack://boss-show-time/./src/plantforms/zhilian/index.js"],"sourcesContent":["import { createDOM } from './index';\n\n// 智联招聘首次打开页面时是服务端渲染，没法监听接口，但是 html 中保存了列表数据\n;(function firstOpen() {\n    const children = document.querySelector('.positionlist')?.children;\n    const { positionList = [] } = window.__INITIAL_STATE__;\n    if(!children || !positionList || positionList.lenth === 0) return;\n\n    positionList.forEach((item, index) => {\n        const {\n            firstPublishTime,\n        }  = item;\n        const dom = children?.[index];\n        if(!dom) return;\n        let tag = createDOM(`发布时间：${firstPublishTime}`); \n        dom.appendChild(tag);\n    });\n})()","\nexport function getZhiLianData(responseText) {\n    try {\n        const data = JSON.parse(responseText);\n        mutationContainer().then((node) => {\n            parseZhiPinData(data?.data?.list || [], getListByNode(node));\n        })\n        return \n    } catch(err) {\n        console.error('解析 JSON 失败', err);\n    }\n}\n\n// 获取职位列表节点\nfunction getListByNode(node) {\n    const children = node?.children;\n    return function getListItem(index) {\n        return children?.[index]\n    }\n}\n\n\n// 监听 positionList-hook 节点，判断职位列表是否被挂载\nfunction mutationContainer () {\n   return new Promise((resolve, reject) => {\n        const dom = document.querySelector('.positionlist');\n        const observer = new MutationObserver(function(childList, obs) {\n            const isAdd = (childList || []).some(item => {\n               return item?.addedNodes?.length > 0\n            });\n            return isAdd ? resolve(dom) : reject('未找到职位列表');\n        })\n\n        observer.observe(dom, {\n            childList: true,\n            subtree: false\n        })\n   })\n}\n\n// 解析数据，插入时间标签\nfunction parseZhiPinData(list, getListItem) {\n    list.forEach((item, index) => {\n        const {\n            firstPublishTime,\n        }  = item;\n        const dom = getListItem(index);\n        let tag = createDOM(`发布时间：${firstPublishTime}`); \n        dom.appendChild(tag);\n    });\n}\n\nexport function createDOM(time) {\n    const div = document.createElement('div');\n    div.classList.add('__zhipin_time_tag');\n    div.innerText = time;\n    return div;\n}\n"],"names":["children","document","querySelector","positionList","window","__INITIAL_STATE__","lenth","forEach","item","index","firstPublishTime","dom","tag","time","div","createElement","classList","add","innerText","createDOM","appendChild"],"sourceRoot":""}