{"version":3,"file":"372.js","mappings":"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","sources":["webpack://boss-show-time/./node_modules/dayjs/dayjs.min.js","webpack://boss-show-time/./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs","webpack://boss-show-time/./node_modules/@sqlite.org/sqlite-wasm/index.mjs"],"sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n **\n ** Using the Emscripten SDK version 3.1.30.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptDir = import.meta.url;\n\n  return function (config) {\n    var sqlite3InitModule = config || {};\n\n    var Module =\n      typeof sqlite3InitModule != 'undefined' ? sqlite3InitModule : {};\n\n    var readyPromiseResolve, readyPromiseReject;\n    Module['ready'] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    const xNameOfInstantiateWasm = false\n      ? 'instantiateWasm'\n      : 'emscripten-bug-17951';\n    Module[xNameOfInstantiateWasm] = function callee(imports, onSuccess) {\n      imports.env.foo = function () {};\n      const uri = Module.locateFile(\n        callee.uri,\n        'undefined' === typeof scriptDirectory ? '' : scriptDirectory,\n      );\n      sqlite3InitModuleState.debugModule('instantiateWasm() uri =', uri);\n      const wfetch = () => fetch(uri, { credentials: 'same-origin' });\n      const loadWasm = WebAssembly.instantiateStreaming\n        ? async () => {\n            return WebAssembly.instantiateStreaming(wfetch(), imports).then(\n              (arg) => onSuccess(arg.instance, arg.module),\n            );\n          }\n        : async () => {\n            return wfetch()\n              .then((response) => response.arrayBuffer())\n              .then((bytes) => WebAssembly.instantiate(bytes, imports))\n              .then((arg) => onSuccess(arg.instance, arg.module));\n          };\n      loadWasm();\n      return {};\n    };\n\n    Module[xNameOfInstantiateWasm].uri = 'sqlite3.wasm';\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf('blob:') !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      } else {\n        scriptDirectory = '';\n      }\n\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'arraybuffer';\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = (title) => (document.title = title);\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.warn.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    if (Module['quit']) quit_ = Module['quit'];\n\n    var STACK_ALIGN = 16;\n    var POINTER_SIZE = 4;\n\n    function getNativeTypeSize(type) {\n      switch (type) {\n        case 'i1':\n        case 'i8':\n        case 'u8':\n          return 1;\n        case 'i16':\n        case 'u16':\n          return 2;\n        case 'i32':\n        case 'u32':\n          return 4;\n        case 'i64':\n        case 'u64':\n          return 8;\n        case 'float':\n          return 4;\n        case 'double':\n          return 8;\n        default: {\n          if (type[type.length - 1] === '*') {\n            return POINTER_SIZE;\n          }\n          if (type[0] === 'i') {\n            const bits = Number(type.substr(1));\n            assert(\n              bits % 8 === 0,\n              'getNativeTypeSize invalid bits ' + bits + ', type ' + type,\n            );\n            return bits / 8;\n          }\n          return 0;\n        }\n      }\n    }\n\n    var wasmBinary;\n    if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    if (typeof WebAssembly != 'object') {\n      abort('no native wasm support detected');\n    }\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    var STACK_SIZE = 524288;\n\n    var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 2147483648 / 65536,\n      });\n    }\n\n    updateMemoryViews();\n\n    INITIAL_MEMORY = wasmMemory.buffer.byteLength;\n\n    var wasmTable;\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n\n    function preRun() {\n      if (Module['preRun']) {\n        if (typeof Module['preRun'] == 'function')\n          Module['preRun'] = [Module['preRun']];\n        while (Module['preRun'].length) {\n          addOnPreRun(Module['preRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module['postRun']) {\n        if (typeof Module['postRun'] == 'function')\n          Module['postRun'] = [Module['postRun']];\n        while (Module['postRun'].length) {\n          addOnPostRun(Module['postRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      if (Module['onAbort']) {\n        Module['onAbort'](what);\n      }\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n      EXITSTATUS = 1;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    function isFileURI(filename) {\n      return filename.startsWith('file://');\n    }\n\n    var wasmBinaryFile;\n    if (Module['locateFile']) {\n      wasmBinaryFile = 'sqlite3.wasm';\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    } else {\n      wasmBinaryFile = new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw 'both async and sync fetching of the wasm failed';\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == 'function') {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n            .then(function (response) {\n              if (!response['ok']) {\n                throw (\n                  \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                );\n              }\n              return response['arrayBuffer']();\n            })\n            .catch(function () {\n              return getBinary(wasmBinaryFile);\n            });\n        }\n      }\n\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        env: asmLibraryArg,\n        wasi_snapshot_preview1: asmLibraryArg,\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n\n        Module['asm'] = exports;\n\n        wasmTable = Module['asm']['__indirect_function_table'];\n\n        addOnInit(Module['asm']['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise()\n          .then(function (binary) {\n            return WebAssembly.instantiate(binary, info);\n          })\n          .then(function (instance) {\n            return instance;\n          })\n          .then(receiver, function (reason) {\n            err('failed to asynchronously prepare wasm: ' + reason);\n\n            abort(reason);\n          });\n      }\n\n      function instantiateAsync() {\n        if (\n          !wasmBinary &&\n          typeof WebAssembly.instantiateStreaming == 'function' &&\n          !isDataURI(wasmBinaryFile) &&\n          typeof fetch == 'function'\n        ) {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(\n            function (response) {\n              var result = WebAssembly.instantiateStreaming(response, info);\n\n              return result.then(receiveInstantiationResult, function (reason) {\n                err('wasm streaming compile failed: ' + reason);\n                err('falling back to ArrayBuffer instantiation');\n                return instantiateArrayBuffer(receiveInstantiationResult);\n              });\n            },\n          );\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          var exports = Module['instantiateWasm'](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err('Module.instantiateWasm callback failed with error: ' + e);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    var ASM_CONSTS = {};\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr >> 0];\n        case 'i8':\n          return HEAP8[ptr >> 0];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          (tempI64 = [\n            value >>> 0,\n            ((tempDouble = value),\n            +Math.abs(tempDouble) >= 1.0\n              ? tempDouble > 0.0\n                ? (Math.min(\n                    +Math.floor(tempDouble / 4294967296.0),\n                    4294967295.0,\n                  ) |\n                    0) >>>\n                  0\n                : ~~+Math.ceil(\n                    (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                  ) >>> 0\n              : 0),\n          ]),\n            (HEAP32[ptr >> 2] = tempI64[0]),\n            (HEAP32[(ptr + 4) >> 2] = tempI64[1]);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort('invalid type for setValue: ' + type);\n      }\n    }\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n      join2: (l, r) => {\n        return PATH.normalize(l + '/' + r);\n      },\n    };\n\n    function getRandomDevice() {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        var randomBuffer = new Uint8Array(1);\n        return () => {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return () => abort('randomDevice');\n    }\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var TTY = {\n      ttys: [],\n      init: function () {},\n      shutdown: function () {},\n      register: function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char: function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (\n              typeof window != 'undefined' &&\n              typeof window.prompt == 'function'\n            ) {\n              result = window.prompt('Input: ');\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n      default_tty1_ops: {\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    function zeroMemory(address, size) {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    }\n\n    function alignMemory(size, alignment) {\n      return Math.ceil(size / alignment) * alignment;\n    }\n    function mmapAlloc(size) {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (!ptr) return 0;\n      return zeroMemory(ptr, size);\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function (mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n              },\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync,\n              },\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink,\n              },\n              stream: {},\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: FS.chrdev_stream_ops,\n            },\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function (node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function (node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function (parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap: function (stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(\n                  contents,\n                  position,\n                  position + length,\n                );\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n      readAsync(\n        url,\n        (arrayBuffer) => {\n          assert(\n            arrayBuffer,\n            'Loading data file \"' + url + '\" failed (no arrayBuffer).',\n          );\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (event) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw 'Loading data file \"' + url + '\" failed.';\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    }\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: (path, opts = {}) => {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath: (node) => {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? mount + '/' + path\n              : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: (parentid, name) => {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: (parent, name) => {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: (parent, name, mode, rdev) => {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode: (node) => {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: (node) => {\n        return node === node.parent;\n      },\n      isMountpoint: (node) => {\n        return !!node.mounted;\n      },\n      isFile: (mode) => {\n        return (mode & 61440) === 32768;\n      },\n      isDir: (mode) => {\n        return (mode & 61440) === 16384;\n      },\n      isLink: (mode) => {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: (mode) => {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: (mode) => {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: (mode) => {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: (mode) => {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n      modeStringToFlags: (str) => {\n        var flags = FS.flagModes[str];\n        if (typeof flags == 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: (flag) => {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions: (node, perms) => {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: (dir) => {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: (dir, name) => {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete: (dir, name, isdir) => {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: (node, flags) => {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream: (stream, fd_start, fd_end) => {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function () {\n                return this.node;\n              },\n\n              set: function (val) {\n                this.node = val;\n              },\n            },\n            isRead: {\n              get: function () {\n                return (this.flags & 2097155) !== 1;\n              },\n            },\n            isWrite: {\n              get: function () {\n                return (this.flags & 2097155) !== 0;\n              },\n            },\n            isAppend: {\n              get: function () {\n                return this.flags & 1024;\n              },\n            },\n            flags: {\n              get: function () {\n                return this.shared.flags;\n              },\n\n              set: function (val) {\n                this.shared.flags = val;\n              },\n            },\n            position: {\n              get: function () {\n                return this.shared.position;\n              },\n\n              set: function (val) {\n                this.shared.position = val;\n              },\n            },\n          });\n        }\n\n        stream = Object.assign(new FS.FSStream(), stream);\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: (fd) => {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: (stream) => {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: () => {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice: (dev, ops) => {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts: (mount) => {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: (populate, callback) => {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            'warning: ' +\n              FS.syncFSRequests +\n              ' FS.syncfs operations in flight at once, probably just doing extra work',\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: (type, opts, mountpoint) => {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: (mountpoint) => {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: (parent, name) => {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: (path, mode, dev) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: (path, mode) => {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: (path, mode) => {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: (path, mode) => {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: (path, mode, dev) => {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: (oldpath, newpath) => {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: (old_path, new_path) => {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: (path) => {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat: (path, dontFollow) => {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: (path) => {\n        return FS.stat(path, true);\n      },\n      chmod: (path, mode, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod: (path, mode) => {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: (fd, mode) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: (path, uid, gid, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown: (path, uid, gid) => {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: (fd, uid, gid) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: (path, len) => {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate: (fd, len) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: (path, atime, mtime) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open: (path, flags, mode) => {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 : mode;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: (stream) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: (stream) => {\n        return stream.fd === null;\n      },\n      llseek: (stream, offset, whence) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: (stream, buffer, offset, length, position) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: (stream, buffer, offset, length, position, canOwn) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: (stream, offset, length) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: (stream, length, position, prot, flags) => {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync: (stream, buffer, offset, length, mmapFlags) => {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      munmap: (stream) => 0,\n      ioctl: (stream, cmd, arg) => {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: (path, opts = {}) => {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: (path, data, opts = {}) => {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: () => {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices: () => {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var random_device = getRandomDevice();\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories: () => {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount: () => {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup: (parent, name) => {\n                  var fd = +name;\n                  var stream = FS.getStream(fd);\n                  if (!stream) throw new FS.ErrnoError(8);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams: () => {\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      ensureErrnoError: () => {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n      staticInit: () => {\n        FS.ensureErrnoError();\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init: (input, output, error) => {\n        FS.init.initialized = true;\n\n        FS.ensureErrnoError();\n\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n\n        FS.createStandardStreams();\n      },\n      quit: () => {\n        FS.init.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: (canRead, canWrite) => {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: (path, dontResolveLastLink) => {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath: (path, dontResolveLastLink) => {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: (parent, path, canRead, canWrite) => {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: (parent, name, properties, canRead, canWrite) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: (parent, name, input, output) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open: (stream) => {\n            stream.seekable = false;\n          },\n          close: (stream) => {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: (stream, buffer, offset, length, pos) => {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: (stream, buffer, offset, length, pos) => {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: (obj) => {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n      createLazyFile: (parent, name, url, canRead, canWrite) => {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize) | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n          function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n        LazyUint8Array.prototype.cacheLength =\n          function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              },\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              },\n            },\n          });\n\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr: ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: (\n        parent,\n        name,\n        url,\n        canRead,\n        canWrite,\n        onload,\n        onerror,\n        dontCreateFile,\n        canOwn,\n        preFinish,\n      ) => {\n        var fullname = name\n          ? PATH_FS.resolve(PATH.join2(parent, name))\n          : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(\n                parent,\n                name,\n                byteArray,\n                canRead,\n                canWrite,\n                canOwn,\n              );\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          if (\n            Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n              if (onerror) onerror();\n              removeRunDependency(dep);\n            })\n          ) {\n            return;\n          }\n          finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: () => {\n        return (\n          window.indexedDB ||\n          window.mozIndexedDB ||\n          window.webkitIndexedDB ||\n          window.msIndexedDB\n        );\n      },\n      DB_NAME: () => {\n        return 'EM_FS_' + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: 'FILE_DATA',\n      saveFilesToDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = () => {\n          out('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var putRequest = files.put(\n              FS.analyzePath(path).object.contents,\n              path,\n            );\n            putRequest.onsuccess = () => {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = () => {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(\n                PATH.dirname(path),\n                PATH.basename(path),\n                getRequest.result,\n                true,\n                true,\n                true,\n              );\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function (dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (\n            e &&\n            e.node &&\n            PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))\n          ) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 8) >> 2] = stat.ino;\n        HEAP32[(buf + 12) >> 2] = stat.mode;\n        HEAPU32[(buf + 16) >> 2] = stat.nlink;\n        HEAP32[(buf + 20) >> 2] = stat.uid;\n        HEAP32[(buf + 24) >> 2] = stat.gid;\n        HEAP32[(buf + 28) >> 2] = stat.rdev;\n        (tempI64 = [\n          stat.size >>> 0,\n          ((tempDouble = stat.size),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAP32[(buf + 48) >> 2] = 4096;\n        HEAP32[(buf + 52) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [\n          Math.floor(atime / 1000) >>> 0,\n          ((tempDouble = Math.floor(atime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 64) >> 2] = (atime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(mtime / 1000) >>> 0,\n          ((tempDouble = Math.floor(mtime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 80) >> 2] = (mtime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(ctime / 1000) >>> 0,\n          ((tempDouble = Math.floor(ctime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 96) >> 2] = (ctime % 1000) * 1000;\n        (tempI64 = [\n          stat.ino >>> 0,\n          ((tempDouble = stat.ino),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 104) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 108) >> 2] = tempI64[1]);\n        return 0;\n      },\n      doMsync: function (addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function setErrNo(value) {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    }\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = SYSCALLS.get();\n            if (arg < 0) {\n              return -28;\n            }\n            var newStream;\n            newStream = FS.createStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = SYSCALLS.get();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 5: {\n            var arg = SYSCALLS.get();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 6:\n          case 7:\n            return 0;\n          case 16:\n          case 8:\n            return -28;\n          case 9:\n            setErrNo(28);\n            return -1;\n          default: {\n            return -28;\n          }\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var MAX_INT53 = 9007199254740992;\n\n    var MIN_INT53 = -9007199254740992;\n    function bigintToI53Checked(num) {\n      return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n    }\n\n    function ___syscall_ftruncate64(fd, length) {\n      try {\n        length = bigintToI53Checked(length);\n        if (isNaN(length)) return -61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509:\n          case 21505: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512:\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = SYSCALLS.get();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = SYSCALLS.get();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? SYSCALLS.get() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function readI53FromI64(ptr) {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    }\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        if (!times) {\n          var atime = Date.now();\n          var mtime = atime;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n        }\n        FS.utime(path, atime, mtime);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = true;\n    function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    var __MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var __MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    function __yday_from_date(date) {\n      var isLeapYear = __isLeapYear(date.getFullYear());\n      var monthDaysCumulative = isLeapYear\n        ? __MONTH_DAYS_LEAP_CUMULATIVE\n        : __MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    }\n    function __localtime_js(time, tmPtr) {\n      var date = new Date(readI53FromI64(time) * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = __yday_from_date(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, off, allocated, addr) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, off, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n        FS.munmap(stream);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function allocateUTF8(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n      return ret;\n    }\n    function __tzset_js(timezone, daylight, tzname) {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : 'GMT';\n      }\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        HEAPU32[tzname >> 2] = winterNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = summerNamePtr;\n      } else {\n        HEAPU32[tzname >> 2] = summerNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = winterNamePtr;\n      }\n    }\n\n    function _emscripten_date_now() {\n      return Date.now();\n    }\n\n    var _emscripten_get_now;\n    _emscripten_get_now = () => performance.now();\n    function getHeapMax() {\n      return 2147483648;\n    }\n\n    function emscripten_realloc_buffer(size) {\n      var b = wasmMemory.buffer;\n      try {\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      let alignUp = (x, multiple) =>\n        x + ((multiple - (x % multiple)) % multiple);\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    var ENV = {};\n\n    function getExecutableName() {\n      return thisProgram || './this.program';\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + '=' + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        var type = stream.tty\n          ? 2\n          : FS.isDir(stream.mode)\n          ? 3\n          : FS.isLink(stream.mode)\n          ? 7\n          : 4;\n        HEAP8[pbuf >> 0] = type;\n\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doReadv(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      try {\n        offset = bigintToI53Checked(offset);\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n          stream.position >>> 0,\n          ((tempDouble = stream.position),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[newOffset >> 2] = tempI64[0]),\n          (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops && stream.stream_ops.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doWritev(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        },\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        },\n      },\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    var ASSERTIONS = false;\n\n    var asmLibraryArg = {\n      __syscall_chmod: ___syscall_chmod,\n      __syscall_faccessat: ___syscall_faccessat,\n      __syscall_fchmod: ___syscall_fchmod,\n      __syscall_fchown32: ___syscall_fchown32,\n      __syscall_fcntl64: ___syscall_fcntl64,\n      __syscall_fstat64: ___syscall_fstat64,\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n      __syscall_getcwd: ___syscall_getcwd,\n      __syscall_ioctl: ___syscall_ioctl,\n      __syscall_lstat64: ___syscall_lstat64,\n      __syscall_mkdirat: ___syscall_mkdirat,\n      __syscall_newfstatat: ___syscall_newfstatat,\n      __syscall_openat: ___syscall_openat,\n      __syscall_readlinkat: ___syscall_readlinkat,\n      __syscall_rmdir: ___syscall_rmdir,\n      __syscall_stat64: ___syscall_stat64,\n      __syscall_unlinkat: ___syscall_unlinkat,\n      __syscall_utimensat: ___syscall_utimensat,\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n      _localtime_js: __localtime_js,\n      _mmap_js: __mmap_js,\n      _munmap_js: __munmap_js,\n      _tzset_js: __tzset_js,\n      emscripten_date_now: _emscripten_date_now,\n      emscripten_get_now: _emscripten_get_now,\n      emscripten_resize_heap: _emscripten_resize_heap,\n      environ_get: _environ_get,\n      environ_sizes_get: _environ_sizes_get,\n      fd_close: _fd_close,\n      fd_fdstat_get: _fd_fdstat_get,\n      fd_read: _fd_read,\n      fd_seek: _fd_seek,\n      fd_sync: _fd_sync,\n      fd_write: _fd_write,\n      memory: wasmMemory,\n    };\n    var asm = createWasm();\n\n    var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n      return (___wasm_call_ctors = Module['___wasm_call_ctors'] =\n        Module['asm']['__wasm_call_ctors']).apply(null, arguments);\n    });\n\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = function () {\n      return (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        Module['asm']['sqlite3_status64']).apply(null, arguments);\n    });\n\n    var _sqlite3_status = (Module['_sqlite3_status'] = function () {\n      return (_sqlite3_status = Module['_sqlite3_status'] =\n        Module['asm']['sqlite3_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = function () {\n      return (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        Module['asm']['sqlite3_db_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = function () {\n      return (_sqlite3_msize = Module['_sqlite3_msize'] =\n        Module['asm']['sqlite3_msize']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = function () {\n      return (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        Module['asm']['sqlite3_vfs_find']).apply(null, arguments);\n    });\n\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = function () {\n      return (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        Module['asm']['sqlite3_initialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = function () {\n      return (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        Module['asm']['sqlite3_malloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_free = (Module['_sqlite3_free'] = function () {\n      return (_sqlite3_free = Module['_sqlite3_free'] =\n        Module['asm']['sqlite3_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = function () {\n      return (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        Module['asm']['sqlite3_vfs_register']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] =\n      function () {\n        return (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n          Module['asm']['sqlite3_vfs_unregister']).apply(null, arguments);\n      });\n\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = function () {\n      return (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        Module['asm']['sqlite3_malloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = function () {\n      return (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        Module['asm']['sqlite3_realloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = function () {\n      return (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        Module['asm']['sqlite3_realloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = function () {\n      return (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        Module['asm']['sqlite3_value_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = function () {\n      return (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        Module['asm']['sqlite3_randomness']).apply(null, arguments);\n    });\n\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = function () {\n      return (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        Module['asm']['sqlite3_stricmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = function () {\n      return (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        Module['asm']['sqlite3_strnicmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] =\n      function () {\n        return (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n          Module['asm']['sqlite3_uri_parameter']).apply(null, arguments);\n      });\n\n    var ___errno_location = (Module['___errno_location'] = function () {\n      return (___errno_location = Module['___errno_location'] =\n        Module['asm']['__errno_location']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = function () {\n      return (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        Module['asm']['sqlite3_uri_boolean']).apply(null, arguments);\n    });\n\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = function () {\n      return (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        Module['asm']['sqlite3_serialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = function () {\n      return (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        Module['asm']['sqlite3_prepare_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_step = (Module['_sqlite3_step'] = function () {\n      return (_sqlite3_step = Module['_sqlite3_step'] =\n        Module['asm']['sqlite3_step']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = function () {\n      return (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        Module['asm']['sqlite3_column_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = function () {\n      return (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        Module['asm']['sqlite3_column_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = function () {\n      return (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        Module['asm']['sqlite3_finalize']).apply(null, arguments);\n    });\n\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = function () {\n      return (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        Module['asm']['sqlite3_file_control']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = function () {\n      return (_sqlite3_reset = Module['_sqlite3_reset'] =\n        Module['asm']['sqlite3_reset']).apply(null, arguments);\n    });\n\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = function () {\n      return (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        Module['asm']['sqlite3_deserialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] =\n      function () {\n        return (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n          Module['asm']['sqlite3_clear_bindings']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = function () {\n      return (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        Module['asm']['sqlite3_value_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = function () {\n      return (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        Module['asm']['sqlite3_value_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = function () {\n      return (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        Module['asm']['sqlite3_value_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = function () {\n      return (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        Module['asm']['sqlite3_value_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = function () {\n      return (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        Module['asm']['sqlite3_value_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] =\n      function () {\n        return (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n          Module['asm']['sqlite3_value_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] =\n      function () {\n        return (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n          Module['asm']['sqlite3_value_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = function () {\n      return (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        Module['asm']['sqlite3_value_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] =\n      function () {\n        return (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n          Module['asm']['sqlite3_value_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] =\n      function () {\n        return (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n          Module['asm']['sqlite3_value_frombind']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = function () {\n      return (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        Module['asm']['sqlite3_value_dup']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = function () {\n      return (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        Module['asm']['sqlite3_value_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = function () {\n      return (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        Module['asm']['sqlite3_result_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] =\n      function () {\n        return (_sqlite3_result_error_nomem = Module[\n          '_sqlite3_result_error_nomem'\n        ] =\n          Module['asm']['sqlite3_result_error_nomem']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      function () {\n        return (_sqlite3_result_error_toobig = Module[\n          '_sqlite3_result_error_toobig'\n        ] =\n          Module['asm']['sqlite3_result_error_toobig']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] =\n      function () {\n        return (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n          Module['asm']['sqlite3_result_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = function () {\n      return (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        Module['asm']['sqlite3_result_error']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = function () {\n      return (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        Module['asm']['sqlite3_result_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = function () {\n      return (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        Module['asm']['sqlite3_result_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = function () {\n      return (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        Module['asm']['sqlite3_result_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] =\n      function () {\n        return (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n          Module['asm']['sqlite3_result_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] =\n      function () {\n        return (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n          Module['asm']['sqlite3_result_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = function () {\n      return (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        Module['asm']['sqlite3_result_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] =\n      function () {\n        return (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n          Module['asm']['sqlite3_result_zeroblob']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] =\n      function () {\n        return (_sqlite3_result_zeroblob64 = Module[\n          '_sqlite3_result_zeroblob64'\n        ] =\n          Module['asm']['sqlite3_result_zeroblob64']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] =\n      function () {\n        return (_sqlite3_result_error_code = Module[\n          '_sqlite3_result_error_code'\n        ] =\n          Module['asm']['sqlite3_result_error_code']).apply(null, arguments);\n      });\n\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = function () {\n      return (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        Module['asm']['sqlite3_user_data']).apply(null, arguments);\n    });\n\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] =\n      function () {\n        return (_sqlite3_context_db_handle = Module[\n          '_sqlite3_context_db_handle'\n        ] =\n          Module['asm']['sqlite3_context_db_handle']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] =\n      function () {\n        return (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n          Module['asm']['sqlite3_vtab_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] =\n      function () {\n        return (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n          Module['asm']['sqlite3_vtab_in_first']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = function () {\n      return (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        Module['asm']['sqlite3_vtab_in_next']).apply(null, arguments);\n    });\n\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] =\n      function () {\n        return (_sqlite3_aggregate_context = Module[\n          '_sqlite3_aggregate_context'\n        ] =\n          Module['asm']['sqlite3_aggregate_context']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = function () {\n      return (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        Module['asm']['sqlite3_get_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = function () {\n      return (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        Module['asm']['sqlite3_set_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = function () {\n      return (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        Module['asm']['sqlite3_column_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = function () {\n      return (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        Module['asm']['sqlite3_data_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = function () {\n      return (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        Module['asm']['sqlite3_column_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = function () {\n      return (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        Module['asm']['sqlite3_column_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] =\n      function () {\n        return (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n          Module['asm']['sqlite3_column_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = function () {\n      return (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        Module['asm']['sqlite3_column_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = function () {\n      return (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        Module['asm']['sqlite3_column_value']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = function () {\n      return (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        Module['asm']['sqlite3_column_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = function () {\n      return (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        Module['asm']['sqlite3_column_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = function () {\n      return (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        Module['asm']['sqlite3_bind_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = function () {\n      return (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        Module['asm']['sqlite3_bind_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = function () {\n      return (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        Module['asm']['sqlite3_bind_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = function () {\n      return (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        Module['asm']['sqlite3_bind_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = function () {\n      return (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        Module['asm']['sqlite3_bind_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = function () {\n      return (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        Module['asm']['sqlite3_bind_pointer']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = function () {\n      return (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        Module['asm']['sqlite3_bind_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = function () {\n      return (_sqlite3_bind_parameter_count = Module[\n        '_sqlite3_bind_parameter_count'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = function () {\n      return (_sqlite3_bind_parameter_index = Module[\n        '_sqlite3_bind_parameter_index'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_index']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = function () {\n      return (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        Module['asm']['sqlite3_db_handle']).apply(null, arguments);\n    });\n\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] =\n      function () {\n        return (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n          Module['asm']['sqlite3_stmt_readonly']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] =\n      function () {\n        return (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n          Module['asm']['sqlite3_stmt_isexplain']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = function () {\n      return (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        Module['asm']['sqlite3_stmt_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = function () {\n      return (_sqlite3_sql = Module['_sqlite3_sql'] =\n        Module['asm']['sqlite3_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = function () {\n      return (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        Module['asm']['sqlite3_expanded_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] =\n      function () {\n        return (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n          Module['asm']['sqlite3_preupdate_old']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] =\n      function () {\n        return (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n          Module['asm']['sqlite3_preupdate_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] =\n      function () {\n        return (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n          Module['asm']['sqlite3_preupdate_depth']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      function () {\n        return (_sqlite3_preupdate_blobwrite = Module[\n          '_sqlite3_preupdate_blobwrite'\n        ] =\n          Module['asm']['sqlite3_preupdate_blobwrite']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] =\n      function () {\n        return (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n          Module['asm']['sqlite3_preupdate_new']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] =\n      function () {\n        return (_sqlite3_value_numeric_type = Module[\n          '_sqlite3_value_numeric_type'\n        ] =\n          Module['asm']['sqlite3_value_numeric_type']).apply(null, arguments);\n      });\n\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = function () {\n      return (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        Module['asm']['sqlite3_errmsg']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] =\n      function () {\n        return (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n          Module['asm']['sqlite3_set_authorizer']).apply(null, arguments);\n      });\n\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = function () {\n      return (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        Module['asm']['sqlite3_strglob']).apply(null, arguments);\n    });\n\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = function () {\n      return (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        Module['asm']['sqlite3_strlike']).apply(null, arguments);\n    });\n\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = function () {\n      return (_sqlite3_exec = Module['_sqlite3_exec'] =\n        Module['asm']['sqlite3_exec']).apply(null, arguments);\n    });\n\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] =\n      function () {\n        return (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n          Module['asm']['sqlite3_auto_extension']).apply(null, arguments);\n      });\n\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = function () {\n      return (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        Module['asm']['sqlite3_cancel_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = function () {\n      return (_sqlite3_reset_auto_extension = Module[\n        '_sqlite3_reset_auto_extension'\n      ] =\n        Module['asm']['sqlite3_reset_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = function () {\n      return (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        Module['asm']['sqlite3_prepare_v3']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] =\n      function () {\n        return (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n          Module['asm']['sqlite3_create_module']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] =\n      function () {\n        return (_sqlite3_create_module_v2 = Module[\n          '_sqlite3_create_module_v2'\n        ] =\n          Module['asm']['sqlite3_create_module_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = function () {\n      return (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        Module['asm']['sqlite3_drop_modules']).apply(null, arguments);\n    });\n\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = function () {\n      return (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        Module['asm']['sqlite3_declare_vtab']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] =\n      function () {\n        return (_sqlite3_vtab_on_conflict = Module[\n          '_sqlite3_vtab_on_conflict'\n        ] =\n          Module['asm']['sqlite3_vtab_on_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] =\n      function () {\n        return (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n          Module['asm']['sqlite3_vtab_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = function () {\n      return (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        Module['asm']['sqlite3_vtab_in']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] =\n      function () {\n        return (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n          Module['asm']['sqlite3_vtab_rhs_value']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] =\n      function () {\n        return (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n          Module['asm']['sqlite3_vtab_distinct']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = function () {\n      return (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        Module['asm']['sqlite3_keyword_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] =\n      function () {\n        return (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n          Module['asm']['sqlite3_keyword_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] =\n      function () {\n        return (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n          Module['asm']['sqlite3_keyword_check']).apply(null, arguments);\n      });\n\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = function () {\n      return (_sqlite3_complete = Module['_sqlite3_complete'] =\n        Module['asm']['sqlite3_complete']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = function () {\n      return (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        Module['asm']['sqlite3_libversion']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      function () {\n        return (_sqlite3_libversion_number = Module[\n          '_sqlite3_libversion_number'\n        ] =\n          Module['asm']['sqlite3_libversion_number']).apply(null, arguments);\n      });\n\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = function () {\n      return (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        Module['asm']['sqlite3_shutdown']).apply(null, arguments);\n    });\n\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] =\n      function () {\n        return (_sqlite3_last_insert_rowid = Module[\n          '_sqlite3_last_insert_rowid'\n        ] =\n          Module['asm']['sqlite3_last_insert_rowid']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = function () {\n      return (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        Module['asm']['sqlite3_set_last_insert_rowid']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = function () {\n      return (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        Module['asm']['sqlite3_changes64']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = function () {\n      return (_sqlite3_changes = Module['_sqlite3_changes'] =\n        Module['asm']['sqlite3_changes']).apply(null, arguments);\n    });\n\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] =\n      function () {\n        return (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n          Module['asm']['sqlite3_total_changes64']).apply(null, arguments);\n      });\n\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] =\n      function () {\n        return (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n          Module['asm']['sqlite3_total_changes']).apply(null, arguments);\n      });\n\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = function () {\n      return (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        Module['asm']['sqlite3_txn_state']).apply(null, arguments);\n    });\n\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = function () {\n      return (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        Module['asm']['sqlite3_close_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = function () {\n      return (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        Module['asm']['sqlite3_busy_handler']).apply(null, arguments);\n    });\n\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] =\n      function () {\n        return (_sqlite3_progress_handler = Module[\n          '_sqlite3_progress_handler'\n        ] =\n          Module['asm']['sqlite3_progress_handler']).apply(null, arguments);\n      });\n\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = function () {\n      return (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        Module['asm']['sqlite3_busy_timeout']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] =\n      function () {\n        return (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n          Module['asm']['sqlite3_create_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] =\n      function () {\n        return (_sqlite3_create_function_v2 = Module[\n          '_sqlite3_create_function_v2'\n        ] =\n          Module['asm']['sqlite3_create_function_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = function () {\n      return (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        Module['asm']['sqlite3_create_window_function']).apply(null, arguments);\n    });\n\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] =\n      function () {\n        return (_sqlite3_overload_function = Module[\n          '_sqlite3_overload_function'\n        ] =\n          Module['asm']['sqlite3_overload_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = function () {\n      return (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        Module['asm']['sqlite3_trace_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = function () {\n      return (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        Module['asm']['sqlite3_commit_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = function () {\n      return (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        Module['asm']['sqlite3_update_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] =\n      function () {\n        return (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n          Module['asm']['sqlite3_rollback_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] =\n      function () {\n        return (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n          Module['asm']['sqlite3_preupdate_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = function () {\n      return (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        Module['asm']['sqlite3_error_offset']).apply(null, arguments);\n    });\n\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = function () {\n      return (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        Module['asm']['sqlite3_errcode']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] =\n      function () {\n        return (_sqlite3_extended_errcode = Module[\n          '_sqlite3_extended_errcode'\n        ] =\n          Module['asm']['sqlite3_extended_errcode']).apply(null, arguments);\n      });\n\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = function () {\n      return (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        Module['asm']['sqlite3_errstr']).apply(null, arguments);\n    });\n\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = function () {\n      return (_sqlite3_limit = Module['_sqlite3_limit'] =\n        Module['asm']['sqlite3_limit']).apply(null, arguments);\n    });\n\n    var _sqlite3_open = (Module['_sqlite3_open'] = function () {\n      return (_sqlite3_open = Module['_sqlite3_open'] =\n        Module['asm']['sqlite3_open']).apply(null, arguments);\n    });\n\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = function () {\n      return (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        Module['asm']['sqlite3_open_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] =\n      function () {\n        return (_sqlite3_create_collation = Module[\n          '_sqlite3_create_collation'\n        ] =\n          Module['asm']['sqlite3_create_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      function () {\n        return (_sqlite3_create_collation_v2 = Module[\n          '_sqlite3_create_collation_v2'\n        ] =\n          Module['asm']['sqlite3_create_collation_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] =\n      function () {\n        return (_sqlite3_collation_needed = Module[\n          '_sqlite3_collation_needed'\n        ] =\n          Module['asm']['sqlite3_collation_needed']).apply(null, arguments);\n      });\n\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = function () {\n      return (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        Module['asm']['sqlite3_table_column_metadata']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = function () {\n      return (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        Module['asm']['sqlite3_extended_result_codes']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = function () {\n      return (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        Module['asm']['sqlite3_uri_key']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = function () {\n      return (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        Module['asm']['sqlite3_uri_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = function () {\n      return (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        Module['asm']['sqlite3_db_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = function () {\n      return (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        Module['asm']['sqlite3_db_filename']).apply(null, arguments);\n    });\n\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] =\n      function () {\n        return (_sqlite3_compileoption_used = Module[\n          '_sqlite3_compileoption_used'\n        ] =\n          Module['asm']['sqlite3_compileoption_used']).apply(null, arguments);\n      });\n\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] =\n      function () {\n        return (_sqlite3_compileoption_get = Module[\n          '_sqlite3_compileoption_get'\n        ] =\n          Module['asm']['sqlite3_compileoption_get']).apply(null, arguments);\n      });\n\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = function () {\n      return (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        Module['asm']['sqlite3session_diff']).apply(null, arguments);\n    });\n\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] =\n      function () {\n        return (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n          Module['asm']['sqlite3session_attach']).apply(null, arguments);\n      });\n\n    var _sqlite3session_create = (Module['_sqlite3session_create'] =\n      function () {\n        return (_sqlite3session_create = Module['_sqlite3session_create'] =\n          Module['asm']['sqlite3session_create']).apply(null, arguments);\n      });\n\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] =\n      function () {\n        return (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n          Module['asm']['sqlite3session_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      function () {\n        return (_sqlite3session_table_filter = Module[\n          '_sqlite3session_table_filter'\n        ] =\n          Module['asm']['sqlite3session_table_filter']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] =\n      function () {\n        return (_sqlite3session_changeset = Module[\n          '_sqlite3session_changeset'\n        ] =\n          Module['asm']['sqlite3session_changeset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = function () {\n      return (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        Module['asm']['sqlite3session_changeset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = function () {\n      return (_sqlite3session_patchset_strm = Module[\n        '_sqlite3session_patchset_strm'\n      ] =\n        Module['asm']['sqlite3session_patchset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] =\n      function () {\n        return (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n          Module['asm']['sqlite3session_patchset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] =\n      function () {\n        return (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n          Module['asm']['sqlite3session_enable']).apply(null, arguments);\n      });\n\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] =\n      function () {\n        return (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n          Module['asm']['sqlite3session_indirect']).apply(null, arguments);\n      });\n\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] =\n      function () {\n        return (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n          Module['asm']['sqlite3session_isempty']).apply(null, arguments);\n      });\n\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] =\n      function () {\n        return (_sqlite3session_memory_used = Module[\n          '_sqlite3session_memory_used'\n        ] =\n          Module['asm']['sqlite3session_memory_used']).apply(null, arguments);\n      });\n\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = function () {\n      return (_sqlite3session_object_config = Module[\n        '_sqlite3session_object_config'\n      ] =\n        Module['asm']['sqlite3session_object_config']).apply(null, arguments);\n    });\n\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = function () {\n      return (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        Module['asm']['sqlite3session_changeset_size']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] =\n      function () {\n        return (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n          Module['asm']['sqlite3changeset_start']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] =\n      function () {\n        return (_sqlite3changeset_start_v2 = Module[\n          '_sqlite3changeset_start_v2'\n        ] =\n          Module['asm']['sqlite3changeset_start_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      function () {\n        return (_sqlite3changeset_start_strm = Module[\n          '_sqlite3changeset_start_strm'\n        ] =\n          Module['asm']['sqlite3changeset_start_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_start_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] =\n      function () {\n        return (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n          Module['asm']['sqlite3changeset_next']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = function () {\n      return (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        Module['asm']['sqlite3changeset_op']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = function () {\n      return (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        Module['asm']['sqlite3changeset_pk']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = function () {\n      return (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        Module['asm']['sqlite3changeset_old']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = function () {\n      return (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        Module['asm']['sqlite3changeset_new']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] =\n      function () {\n        return (_sqlite3changeset_conflict = Module[\n          '_sqlite3changeset_conflict'\n        ] =\n          Module['asm']['sqlite3changeset_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = function () {\n      return (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        Module['asm']['sqlite3changeset_fk_conflicts']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] =\n      function () {\n        return (_sqlite3changeset_finalize = Module[\n          '_sqlite3changeset_finalize'\n        ] =\n          Module['asm']['sqlite3changeset_finalize']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] =\n      function () {\n        return (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n          Module['asm']['sqlite3changeset_invert']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = function () {\n      return (_sqlite3changeset_invert_strm = Module[\n        '_sqlite3changeset_invert_strm'\n      ] =\n        Module['asm']['sqlite3changeset_invert_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] =\n      function () {\n        return (_sqlite3changeset_apply_v2 = Module[\n          '_sqlite3changeset_apply_v2'\n        ] =\n          Module['asm']['sqlite3changeset_apply_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] =\n      function () {\n        return (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n          Module['asm']['sqlite3changeset_apply']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_apply_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      function () {\n        return (_sqlite3changeset_apply_strm = Module[\n          '_sqlite3changeset_apply_strm'\n        ] =\n          Module['asm']['sqlite3changeset_apply_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] =\n      function () {\n        return (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n          Module['asm']['sqlite3changegroup_new']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] =\n      function () {\n        return (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n          Module['asm']['sqlite3changegroup_add']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] =\n      function () {\n        return (_sqlite3changegroup_output = Module[\n          '_sqlite3changegroup_output'\n        ] =\n          Module['asm']['sqlite3changegroup_output']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      function () {\n        return (_sqlite3changegroup_add_strm = Module[\n          '_sqlite3changegroup_add_strm'\n        ] =\n          Module['asm']['sqlite3changegroup_add_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = function () {\n      return (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        Module['asm']['sqlite3changegroup_output_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] =\n      function () {\n        return (_sqlite3changegroup_delete = Module[\n          '_sqlite3changegroup_delete'\n        ] =\n          Module['asm']['sqlite3changegroup_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] =\n      function () {\n        return (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n          Module['asm']['sqlite3changeset_concat']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = function () {\n      return (_sqlite3changeset_concat_strm = Module[\n        '_sqlite3changeset_concat_strm'\n      ] =\n        Module['asm']['sqlite3changeset_concat_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_config = (Module['_sqlite3session_config'] =\n      function () {\n        return (_sqlite3session_config = Module['_sqlite3session_config'] =\n          Module['asm']['sqlite3session_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = function () {\n      return (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        Module['asm']['sqlite3_sourceid']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_pstack_ptr = (Module['_sqlite3_wasm_pstack_ptr'] =\n      function () {\n        return (_sqlite3_wasm_pstack_ptr = Module['_sqlite3_wasm_pstack_ptr'] =\n          Module['asm']['sqlite3_wasm_pstack_ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_restore = (Module['_sqlite3_wasm_pstack_restore'] =\n      function () {\n        return (_sqlite3_wasm_pstack_restore = Module[\n          '_sqlite3_wasm_pstack_restore'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_restore']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_alloc = (Module['_sqlite3_wasm_pstack_alloc'] =\n      function () {\n        return (_sqlite3_wasm_pstack_alloc = Module[\n          '_sqlite3_wasm_pstack_alloc'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_alloc']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_remaining = (Module[\n      '_sqlite3_wasm_pstack_remaining'\n    ] = function () {\n      return (_sqlite3_wasm_pstack_remaining = Module[\n        '_sqlite3_wasm_pstack_remaining'\n      ] =\n        Module['asm']['sqlite3_wasm_pstack_remaining']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_pstack_quota = (Module['_sqlite3_wasm_pstack_quota'] =\n      function () {\n        return (_sqlite3_wasm_pstack_quota = Module[\n          '_sqlite3_wasm_pstack_quota'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_quota']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_error = (Module['_sqlite3_wasm_db_error'] =\n      function () {\n        return (_sqlite3_wasm_db_error = Module['_sqlite3_wasm_db_error'] =\n          Module['asm']['sqlite3_wasm_db_error']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_struct = (Module['_sqlite3_wasm_test_struct'] =\n      function () {\n        return (_sqlite3_wasm_test_struct = Module[\n          '_sqlite3_wasm_test_struct'\n        ] =\n          Module['asm']['sqlite3_wasm_test_struct']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_enum_json = (Module['_sqlite3_wasm_enum_json'] =\n      function () {\n        return (_sqlite3_wasm_enum_json = Module['_sqlite3_wasm_enum_json'] =\n          Module['asm']['sqlite3_wasm_enum_json']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vfs_unlink = (Module['_sqlite3_wasm_vfs_unlink'] =\n      function () {\n        return (_sqlite3_wasm_vfs_unlink = Module['_sqlite3_wasm_vfs_unlink'] =\n          Module['asm']['sqlite3_wasm_vfs_unlink']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_vfs = (Module['_sqlite3_wasm_db_vfs'] = function () {\n      return (_sqlite3_wasm_db_vfs = Module['_sqlite3_wasm_db_vfs'] =\n        Module['asm']['sqlite3_wasm_db_vfs']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_db_reset = (Module['_sqlite3_wasm_db_reset'] =\n      function () {\n        return (_sqlite3_wasm_db_reset = Module['_sqlite3_wasm_db_reset'] =\n          Module['asm']['sqlite3_wasm_db_reset']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_export_chunked = (Module[\n      '_sqlite3_wasm_db_export_chunked'\n    ] = function () {\n      return (_sqlite3_wasm_db_export_chunked = Module[\n        '_sqlite3_wasm_db_export_chunked'\n      ] =\n        Module['asm']['sqlite3_wasm_db_export_chunked']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_db_serialize = (Module['_sqlite3_wasm_db_serialize'] =\n      function () {\n        return (_sqlite3_wasm_db_serialize = Module[\n          '_sqlite3_wasm_db_serialize'\n        ] =\n          Module['asm']['sqlite3_wasm_db_serialize']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vfs_create_file = (Module[\n      '_sqlite3_wasm_vfs_create_file'\n    ] = function () {\n      return (_sqlite3_wasm_vfs_create_file = Module[\n        '_sqlite3_wasm_vfs_create_file'\n      ] =\n        Module['asm']['sqlite3_wasm_vfs_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_posix_create_file = (Module[\n      '_sqlite3_wasm_posix_create_file'\n    ] = function () {\n      return (_sqlite3_wasm_posix_create_file = Module[\n        '_sqlite3_wasm_posix_create_file'\n      ] =\n        Module['asm']['sqlite3_wasm_posix_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3_wasm_kvvfsMakeKeyOnPstack'\n    ] = function () {\n      return (_sqlite3_wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3_wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        Module['asm']['sqlite3_wasm_kvvfsMakeKeyOnPstack']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3_wasm_kvvfs_methods = (Module['_sqlite3_wasm_kvvfs_methods'] =\n      function () {\n        return (_sqlite3_wasm_kvvfs_methods = Module[\n          '_sqlite3_wasm_kvvfs_methods'\n        ] =\n          Module['asm']['sqlite3_wasm_kvvfs_methods']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vtab_config = (Module['_sqlite3_wasm_vtab_config'] =\n      function () {\n        return (_sqlite3_wasm_vtab_config = Module[\n          '_sqlite3_wasm_vtab_config'\n        ] =\n          Module['asm']['sqlite3_wasm_vtab_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_ip = (Module['_sqlite3_wasm_db_config_ip'] =\n      function () {\n        return (_sqlite3_wasm_db_config_ip = Module[\n          '_sqlite3_wasm_db_config_ip'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_ip']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_pii = (Module['_sqlite3_wasm_db_config_pii'] =\n      function () {\n        return (_sqlite3_wasm_db_config_pii = Module[\n          '_sqlite3_wasm_db_config_pii'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_pii']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_s = (Module['_sqlite3_wasm_db_config_s'] =\n      function () {\n        return (_sqlite3_wasm_db_config_s = Module[\n          '_sqlite3_wasm_db_config_s'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_s']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_i = (Module['_sqlite3_wasm_config_i'] =\n      function () {\n        return (_sqlite3_wasm_config_i = Module['_sqlite3_wasm_config_i'] =\n          Module['asm']['sqlite3_wasm_config_i']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_ii = (Module['_sqlite3_wasm_config_ii'] =\n      function () {\n        return (_sqlite3_wasm_config_ii = Module['_sqlite3_wasm_config_ii'] =\n          Module['asm']['sqlite3_wasm_config_ii']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_j = (Module['_sqlite3_wasm_config_j'] =\n      function () {\n        return (_sqlite3_wasm_config_j = Module['_sqlite3_wasm_config_j'] =\n          Module['asm']['sqlite3_wasm_config_j']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_init_wasmfs = (Module['_sqlite3_wasm_init_wasmfs'] =\n      function () {\n        return (_sqlite3_wasm_init_wasmfs = Module[\n          '_sqlite3_wasm_init_wasmfs'\n        ] =\n          Module['asm']['sqlite3_wasm_init_wasmfs']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_intptr = (Module['_sqlite3_wasm_test_intptr'] =\n      function () {\n        return (_sqlite3_wasm_test_intptr = Module[\n          '_sqlite3_wasm_test_intptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_intptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_voidptr = (Module['_sqlite3_wasm_test_voidptr'] =\n      function () {\n        return (_sqlite3_wasm_test_voidptr = Module[\n          '_sqlite3_wasm_test_voidptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_voidptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_max = (Module['_sqlite3_wasm_test_int64_max'] =\n      function () {\n        return (_sqlite3_wasm_test_int64_max = Module[\n          '_sqlite3_wasm_test_int64_max'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64_max']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_min = (Module['_sqlite3_wasm_test_int64_min'] =\n      function () {\n        return (_sqlite3_wasm_test_int64_min = Module[\n          '_sqlite3_wasm_test_int64_min'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64_min']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_times2 = (Module[\n      '_sqlite3_wasm_test_int64_times2'\n    ] = function () {\n      return (_sqlite3_wasm_test_int64_times2 = Module[\n        '_sqlite3_wasm_test_int64_times2'\n      ] =\n        Module['asm']['sqlite3_wasm_test_int64_times2']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_test_int64_minmax = (Module[\n      '_sqlite3_wasm_test_int64_minmax'\n    ] = function () {\n      return (_sqlite3_wasm_test_int64_minmax = Module[\n        '_sqlite3_wasm_test_int64_minmax'\n      ] =\n        Module['asm']['sqlite3_wasm_test_int64_minmax']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_test_int64ptr = (Module['_sqlite3_wasm_test_int64ptr'] =\n      function () {\n        return (_sqlite3_wasm_test_int64ptr = Module[\n          '_sqlite3_wasm_test_int64ptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_stack_overflow = (Module[\n      '_sqlite3_wasm_test_stack_overflow'\n    ] = function () {\n      return (_sqlite3_wasm_test_stack_overflow = Module[\n        '_sqlite3_wasm_test_stack_overflow'\n      ] =\n        Module['asm']['sqlite3_wasm_test_stack_overflow']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3_wasm_test_str_hello = (Module['_sqlite3_wasm_test_str_hello'] =\n      function () {\n        return (_sqlite3_wasm_test_str_hello = Module[\n          '_sqlite3_wasm_test_str_hello'\n        ] =\n          Module['asm']['sqlite3_wasm_test_str_hello']).apply(null, arguments);\n      });\n\n    var _malloc = (Module['_malloc'] = function () {\n      return (_malloc = Module['_malloc'] = Module['asm']['malloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _free = (Module['_free'] = function () {\n      return (_free = Module['_free'] = Module['asm']['free']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _realloc = (Module['_realloc'] = function () {\n      return (_realloc = Module['_realloc'] = Module['asm']['realloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _emscripten_builtin_memalign = (Module['_emscripten_builtin_memalign'] =\n      function () {\n        return (_emscripten_builtin_memalign = Module[\n          '_emscripten_builtin_memalign'\n        ] =\n          Module['asm']['emscripten_builtin_memalign']).apply(null, arguments);\n      });\n\n    var stackSave = (Module['stackSave'] = function () {\n      return (stackSave = Module['stackSave'] =\n        Module['asm']['stackSave']).apply(null, arguments);\n    });\n\n    var stackRestore = (Module['stackRestore'] = function () {\n      return (stackRestore = Module['stackRestore'] =\n        Module['asm']['stackRestore']).apply(null, arguments);\n    });\n\n    var stackAlloc = (Module['stackAlloc'] = function () {\n      return (stackAlloc = Module['stackAlloc'] =\n        Module['asm']['stackAlloc']).apply(null, arguments);\n    });\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module['calledRun'] = true;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(function () {\n          setTimeout(function () {\n            Module['setStatus']('');\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    if (!Module.postRun) Module.postRun = [];\n    Module.postRun.push(function (Module) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          console.warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                return !!Module.HEAPU64;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3_wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3_wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3_wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3_wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          wasm.sqlite3_wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = wasm.sqlite3_wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = wasm.sqlite3_wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          if (!this.s) {\n            this.s = wasm.xWrap('sqlite3_wasm_db_config_s', 'int', [\n              'sqlite3*',\n              'int',\n              'string:static',\n            ]);\n            this.pii = wasm.xWrap('sqlite3_wasm_db_config_pii', 'int', [\n              'sqlite3*',\n              'int',\n              '*',\n              'int',\n              'int',\n            ]);\n            this.ip = wasm.xWrap('sqlite3_wasm_db_config_ip', 'int', [\n              'sqlite3*',\n              'int',\n              'int',\n              '*',\n            ]);\n          }\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n            ? 8\n            : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n            ? n\n            : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length) __argcMismatch(fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              for (const i in args)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                delete xcvPart.get(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          [\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroyAuxData',\n                signature: 'v(*)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_isexplain', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_readonly', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        if (wasm.exports.sqlite3_activate_see instanceof Function) {\n          wasm.bindingSignatures.push(\n            ['sqlite3_key', 'int', 'sqlite3*', 'string', 'int'],\n            ['sqlite3_key_v2', 'int', 'sqlite3*', 'string', '*', 'int'],\n            ['sqlite3_rekey', 'int', 'sqlite3*', 'string', 'int'],\n            ['sqlite3_rekey_v2', 'int', 'sqlite3*', 'string', '*', 'int'],\n            ['sqlite3_activate_see', undefined, 'string'],\n          );\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_create_module',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n          ],\n          [\n            'sqlite3_create_module_v2',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n          ],\n          ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n          [\n            'sqlite3_preupdate_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_preupdate_hook',\n                signature: 'v(ppippjj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                    callback(\n                      p,\n                      db,\n                      op,\n                      wasm.cstrToJs(zDb),\n                      wasm.cstrToJs(zTbl),\n                      iKey1,\n                      iKey2,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n          ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n          ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n          ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n          ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n          ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n          ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n          ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n          ['sqlite3_vtab_rhs_value', 'int', 'sqlite3_index_info*', 'int', '**'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3changegroup_add) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasm = [\n          ['sqlite3_wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3_wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3_wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3_wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3_wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_index_info*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_index_info || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_module*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasm) {\n            wasm[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3_wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3_wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3_wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3_wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3_wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3_wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3_wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3_wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3_wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3_wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.wudf) m.wudf = new Map();\n          this._addUDF(pDb, name, arity, m.wudf);\n        };\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              console.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_table_filter) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3_wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.xWrap(\n            'sqlite3_create_window_function',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xValue',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xInverse',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3_wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          capi.sqlite3_create_window_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_window_function',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateWindowFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xValue instanceof Function ||\n                  xInverse instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_window_function() setup threw:', e);\n              return util.sqlite3_wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult =\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3_wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3_wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3_wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3_wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3_wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3_wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3_wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3_wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3_wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey = wasm.exports.sqlite3_wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.43.2',\n          libVersionNumber: 3043002,\n          sourceId:\n            '2023-10-10 12:14:04 4310099cce5a487035fa535dd3002c59ac7f1d1bec68d7cf317fd3e769484790',\n          downloadVersion: 3430200,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenSql = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs = capi.sqlite3_js_db_vfs(pDb);\n            if (!pVfs)\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenSql[pVfs];\n            if (postInitSql instanceof Function) {\n              postInitSql(this, sqlite3);\n            } else if (postInitSql) {\n              checkSqlite3Rc(pDb, capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0));\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenSql = function (pVfs, sql) {\n          __vfsPostOpenSql[pVfs] = sql;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt) => stmt.get(Object.create(null));\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++)\n                        stmt.getColumnNames(opt.columnNames);\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                ? xArity.length - 1\n                : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            dbCtorHelper.call(this, {\n              filename: storageName,\n              flags: 'c',\n              vfs: 'kvvfs',\n            });\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const self = this.self;\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = sqlite3.wasm.sqlite3_wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  sqlite3.wasm.sqlite3_wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const guessVfs = function (filename) {\n            const m = /^file:.+(vfs=(\\w+))/.exec(filename);\n            return sqlite3.capi.sqlite3_vfs_find(m ? m[2] : 0);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              let byteArray, pVfs;\n              oargs.vfs = args.vfs;\n              if (isSpecialDbFilename(args.filename)) {\n                oargs.filename = args.filename || '';\n              } else {\n                oargs.filename = args.filename;\n                byteArray = args.byteArray;\n                if (byteArray) pVfs = guessVfs(args.filename);\n              }\n              if (pVfs) {\n                let pMem;\n                try {\n                  pMem = sqlite3.wasm.allocFromTypedArray(byteArray);\n                  const rc = sqlite3.wasm.sqlite3_wasm_vfs_create_file(\n                    pVfs,\n                    oargs.filename,\n                    pMem,\n                    byteArray.byteLength,\n                  );\n                  if (rc) sqlite3.SQLite3Error.toss(rc);\n                } catch (e) {\n                  throw new sqlite3.SQLite3Error(\n                    e.name + ' creating ' + args.filename + ': ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                } finally {\n                  if (pMem) sqlite3.wasm.dealloc(pMem);\n                }\n              }\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              rc.opfsEnabled = !!sqlite3.opfs;\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n\n            'opfs-tree': async function (ev) {\n              if (!sqlite3.opfs) toss('OPFS support is unavailable.');\n              const response = await sqlite3.opfs.treeList();\n              return response;\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ self, sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null),\n          vtab = Object.create(null);\n\n        const StructBinder = sqlite3.StructBinder;\n        sqlite3.vfs = vfs;\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage errror: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              installMethods(o.struct, o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              installMethods(mod, remethods, false);\n            } else {\n              installMethods(mod, methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              Atomics.wait(state.sabOPView, state.opIds.rc, -1);\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                const f = __openFiles[pFile];\n                wasm.poke(pOut, f.lockType ? 1 : 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if ('number' === typeof zName) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.registerVfs = (asDefault = false) => {\n              return wasm.exports.sqlite3_vfs_register(\n                opfsVfs.pointer,\n                asDefault ? 1 : 0,\n              );\n            };\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              const n = bytes.byteLength;\n              if (n < 512 || n % 512 != 0) {\n                toss('Byte array size is invalid for an SQLite db.');\n              }\n              const header = 'SQLite format 3';\n              for (let i = 0; i < header.length; ++i) {\n                if (header.charCodeAt(i) !== bytes[i]) {\n                  toss('Input does not contain an SQLite database header.');\n                }\n              }\n              let sah;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                const nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                  sqlite3.capi.sqlite3_exec(\n                    oo1Db,\n                    [\n                      'pragma journal_mode=DELETE;',\n\n                      'pragma cache_size=-16384;',\n                    ],\n                    0,\n                    0,\n                    0,\n                  );\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                pool.storeErr(e);\n                return capi.SQLITE_IOERR;\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR;\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR;\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR;\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return nBytes === n ? 0 : capi.SQLITE_IOERR;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR;\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xGetLastError ${nOut}`);\n            const e = pool.popErr();\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            const iter = this.#mapFilenameToSAH.keys();\n            for (const n of iter) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody);\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n\n            const digest = this.computeDigest(this.#apBody);\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray) {\n            let h1 = 0xdeadbeef;\n            let h2 = 0x41c6ce57;\n            for (const v of byteArray) {\n              h1 = 31 * h1 + v * 307;\n              h2 = 31 * h2 + v * 307;\n            }\n            return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e) {\n            if (e) this.error(e);\n            return (this.$error = e);\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(this.vfsName, 'removeVfs() failed:', e);\n            }\n            return true;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        let instanceCounter = 0;\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          const vfsName = options.name || optionDefaults.name;\n          if (0 && 2 === ++instanceCounter) {\n            throw new Error('Just testing rejection.');\n          }\n          if (initPromises[vfsName]) {\n            return initPromises[vfsName];\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowInInit) {\n                throw options.$testThrowInInit;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                    oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                      theVfs.pointer,\n                      function (oo1Db, sqlite3) {\n                        sqlite3.capi.sqlite3_exec(\n                          oo1Db,\n                          [\n                            'pragma journal_mode=DELETE;',\n                            'pragma cache_size=-16384;',\n                          ],\n                          0,\n                          0,\n                          0,\n                        );\n                      },\n                    );\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  return e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    });\n\n    return sqlite3InitModule.ready;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        return f();\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n","import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\n\nexport default sqlite3InitModule;\n"],"names":["module","exports","e","n","r","i","s","u","a","o","c","f","h","d","l","$","y","M","name","weekdays","split","months","ordinal","t","m","String","length","Array","join","v","z","utcOffset","Math","abs","floor","date","year","month","clone","add","ceil","p","w","D","ms","Q","toLowerCase","replace","g","S","_","O","args","arguments","b","locale","$L","utc","$u","x","$x","$offset","this","parse","prototype","$d","Date","NaN","test","match","substring","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","format","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","k","forEach","extend","$i","isDayjs","en","Ls","_scriptDir","sqlite3InitModule","config","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","sqlite3InitModuleState","globalThis","Object","assign","create","debugModule","location","xNameOfInstantiateWasm","callee","imports","onSuccess","env","foo","uri","locateFile","scriptDirectory","wfetch","fetch","credentials","WebAssembly","instantiateStreaming","async","then","arg","instance","response","arrayBuffer","bytes","instantiate","read_","readAsync","readBinary","moduleOverrides","arguments_","thisProgram","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","process","versions","node","self","href","document","currentScript","src","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","Uint8Array","onload","onerror","status","wasmBinary","wasmMemory","out","console","log","bind","err","warn","abort","ABORT","HEAP8","HEAPU8","HEAP16","HEAP32","HEAPU32","UTF8Decoder","TextDecoder","undefined","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","buffer","decode","subarray","str","u0","u1","u2","fromCharCode","ch","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","updateMemoryViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","INITIAL_MEMORY","Memory","initial","maximum","byteLength","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","RuntimeError","wasmBinaryFile","path","tempDouble","tempI64","isDataURI","filename","startsWith","getBinary","file","callRuntimeCallbacks","callbacks","shift","URL","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","filter","dirname","result","root","dir","basename","lastSlash","paths","call","join2","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","samePartsLength","outputParts","push","concat","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","fsync","read","offset","pos","get_char","bytesRead","timestamp","now","write","put_char","default_tty_ops","prompt","readline","val","default_tty1_ops","mmapAlloc","size","alignment","alignMemory","ptr","_emscripten_builtin_memalign","address","fill","zeroMemory","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","hasOwnProperty","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","defineProperties","object","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","pop","syncfs","populate","completed","doCallback","done","errored","type","pseudo","mountRoot","unmount","keys","next","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","ret","buf","writeFile","data","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","message","constructor","code","stack","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","writeChunks","fn","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","Browser","handledByPreloadPlugin","noRunDep","dep","text","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","func","doMsync","addr","varargs","getStr","UTF8ToString","bigintToI53Checked","num","readI53FromI64","_emscripten_get_now","__MONTH_DAYS_LEAP_CUMULATIVE","__MONTH_DAYS_REGULAR_CUMULATIVE","allocateUTF8","_malloc","emscripten_realloc_buffer","grow","performance","ENV","getEnvStrings","strings","USER","LOGNAME","PWD","HOME","LANG","navigator","languages","calledRun","asmLibraryArg","__syscall_chmod","__syscall_faccessat","amode","__syscall_fchmod","__syscall_fchown32","owner","group","__syscall_fcntl64","___errno_location","__syscall_fstat64","__syscall_ftruncate64","isNaN","__syscall_getcwd","cwdLengthInBytes","__syscall_ioctl","op","argp","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","__syscall_utimensat","times","seconds","nanoseconds","_emscripten_get_now_is_monotonic","_localtime_js","time","tmPtr","yday","__yday_from_date","summerOffset","winterOffset","dst","_mmap_js","off","res","_munmap_js","_tzset_js","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","toTimeString","winterName","summerName","winterNamePtr","summerNamePtr","emscripten_date_now","emscripten_get_now","emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","environ_get","__environ","environ_buf","bufSize","string","writeAsciiToMemory","environ_sizes_get","penviron_count","penviron_buf_size","fd_close","fd_fdstat_get","pbuf","fd_read","iov","iovcnt","pnum","curr","doReadv","fd_seek","newOffset","fd_sync","fd_write","doWritev","memory","info","wasi_snapshot_preview1","receiveInstance","cb","receiveInstantiationResult","instantiateArrayBuffer","receiver","catch","binary","reason","createWasm","run","doRun","postRun","preRun","setTimeout","runCaller","sqlite3ApiBootstrap","apiConfig","sqlite3ApiConfig","defaultConfig","sqlite3","bigIntEnabled","HEAPU64","debug","wasmfsOpfsDir","useStdAlloc","allocExportName","deallocExportName","reallocExportName","capi","wasm","__rcStr","rc","sqlite3_js_rc_str","SQLite3Error","super","rcStr","resultCode","SQLITE_ERROR","toss","toss3","isInt32","__SAB","SharedArrayBuffer","isSharedTypedArray","aTypedArray","typedArrayPart","begin","isBindableTypedArray","isSQLableTypedArray","affirmBindableTypedArray","utf8Decoder","typedArrayToString","typedArray","WasmAllocError","SQLITE_NOMEM","sqlite3_bind_blob","sqlite3_bind_text","sqlite3_create_function_v2","pDb","funcName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","xDestroy","sqlite3_create_function","sqlite3_create_window_function","xValue","xInverse","sqlite3_prepare_v3","dbPtr","sql","sqlByteLen","prepFlags","stmtPtrPtr","strPtrPtr","sqlite3_prepare_v2","sqlite3_exec","pVoid","pErrMsg","sqlite3_randomness","util","flexibleString","isArray","isPtr","cstrToJs","bigIntFits32","bigIntFits64","_max","BigInt","_min","bigIntFitsDouble","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isTypedArray","BYTES_PER_ELEMENT","isUIThread","ptrSizeof","wasmPtrSizeof","ptrIR","wasmPtrIR","alloc","realloc","dealloc","allocFromTypedArray","srcTypedArray","pRet","heapForSize","keyAlloc","keyDealloc","keyRealloc","Function","impl","m2","__wasmfsOpfsDir","compileOptionUsed","optName","_result","_opt","_rx","_rxInt","opt","rv","ov","sqlite3_compileoption_get","sqlite3_compileoption_used","pstack","restore","sqlite3_wasm_pstack_restore","sizeofIR","sqlite3_wasm_pstack_alloc","allocChunks","sz","mem","allocPtr","safePtrSize","pointer","configurable","iterable","writeable","sqlite3_wasm_pstack_ptr","quota","sqlite3_wasm_pstack_quota","remaining","sqlite3_wasm_pstack_remaining","ta","heap8u","nAlloc","j","sqlite3_wasmfs_opfs_dir","pdir","FileSystemHandle","FileSystemDirectoryHandle","FileSystemFileHandle","xCallWrapped","sqlite3_wasmfs_filename_is_persistent","sqlite3_js_db_uses_vfs","vfsName","dbName","pK","sqlite3_vfs_find","sqlite3_js_db_vfs","sqlite3_js_vfs_list","pVfs","oVfs","sqlite3_vfs","$zName","$pNext","dispose","sqlite3_js_db_export","schema","xWrap","testConvertArg","scope","scopedAllocPush","pOut","pSize","scopedAlloc","ppOut","zSchema","scopedAllocCString","sqlite3_wasm_db_serialize","peekPtr","nOut","peek","sqlite3_free","scopedAllocPop","dbPointer","sqlite3_wasm_db_vfs","sqlite3_js_aggregate_context","pCtx","sqlite3_aggregate_context","sqlite3_js_posix_create_file","dataLen","pData","sqlite3_wasm_posix_create_file","sqlite3_js_vfs_create_file","vfs","sqlite3_wasm_vfs_create_file","__kvvfsInfo","which","prefix","stores","sessionStorage","localStorage","sqlite3_js_kvvfs_clear","kvinfo","toRm","kk","removeItem","sqlite3_js_kvvfs_size","getItem","sqlite3_db_config","pii","ip","SQLITE_DBCONFIG_ENABLE_FKEY","SQLITE_DBCONFIG_ENABLE_TRIGGER","SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION","SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","SQLITE_DBCONFIG_ENABLE_QPSG","SQLITE_DBCONFIG_TRIGGER_EQP","SQLITE_DBCONFIG_RESET_DATABASE","SQLITE_DBCONFIG_DEFENSIVE","SQLITE_DBCONFIG_WRITABLE_SCHEMA","SQLITE_DBCONFIG_LEGACY_ALTER_TABLE","SQLITE_DBCONFIG_DQS_DML","SQLITE_DBCONFIG_DQS_DDL","SQLITE_DBCONFIG_ENABLE_VIEW","SQLITE_DBCONFIG_LEGACY_FILE_FORMAT","SQLITE_DBCONFIG_TRUSTED_SCHEMA","SQLITE_DBCONFIG_STMT_SCANSTATUS","SQLITE_DBCONFIG_REVERSE_SCANORDER","SQLITE_DBCONFIG_LOOKASIDE","SQLITE_DBCONFIG_MAINDBNAME","SQLITE_MISUSE","sqlite3_value_to_js","pVal","throwIfCannotConvert","valType","sqlite3_value_type","SQLITE_INTEGER","sqlite3_value_int64","sqlite3_value_double","SQLITE_FLOAT","SQLITE_TEXT","sqlite3_value_text","SQLITE_BLOB","sqlite3_value_bytes","pBlob","sqlite3_value_blob","SQLITE_NULL","SQLITE_MISMATCH","sqlite3_values_to_js","argc","pArgv","tgt","sqlite3_result_error_js","sqlite3_result_error_nomem","sqlite3_result_error","sqlite3_result_js","sqlite3_result_int","sqlite3_result_double","sqlite3_result_int64","isInteger","allocCString","sqlite3_result_text","SQLITE_WASM_DEALLOC","sqlite3_result_null","sqlite3_result_blob","sqlite3_column_js","pStmt","iCol","sqlite3_column_value","__newOldValue","pObj","pokePtr","pv","sqlite3_preupdate_new_js","sqlite3_preupdate_old_js","sqlite3changeset_new_js","pChangesetIter","sqlite3changeset_old_js","version","client","asyncPostInit","ff","isReady","lia","initializersAsync","postInit","__isUnderTest","StructBinder","catcher","map","scriptInfo","initializers","WhWasmUtilInstaller","target","defineProperty","enumerable","pointerIR","cache","heapSize","freeFuncIndexes","utf8Encoder","TextEncoder","endsWith","heapWrappers","HEAP8U","HEAP16U","HEAP32U","HEAP64","HEAP64U","HEAP32F","HEAP64F","heap8","heap16","heap16u","heap32","heap32u","unsigned","functionTable","__indirect_function_table","functionEntry","fptr","ft","jsFuncToWasm","sig","sigTypes","P","typeCodes","f64","f32","i64","i32","uleb128Encode","method","rxJSig","sigParams","letterType","pushSigType","dest","letter","wasmCode","Instance","__installFunction","scoped","oldLen","installFunction","scopedInstallFunction","uninstallFunction","fi","list","poke","value","peek8","poke8","peek16","poke16","peek32","poke32","peek64","poke64","peek32f","poke32f","peek64f","poke64f","getMemValue","getPtrValue","setMemValue","setPtrValue","isPtr32","cstrlen","jstrlen","jstrcpy","jstr","maxBytes","addNul","cstrncpy","tgtPtr","srcPtr","strPtr","jstrToUintArray","encode","__affirmAlloc","__allocCStr","returnWithLength","allocator","state","__allocMainArgv","isScoped","pList","scopedAllocMainArgv","allocMainArgv","cArgvToJs","scopedAllocCall","__allocPtr","howMany","pIr","scopedAllocPtr","xGet","__argcMismatch","xCall","fname","convert","Map","xArg","xResult","__xArgPtr","copyToResult","adaptPtr","__xArgString","JSON","AbstractArgAdapter","convertArg","argv","argIndex","FuncPtrAdapter","warnOnUse","signature","contextKey","bindScope","bindScopes","bindMod","isTransient","isContext","isPermanent","singleton","callProxy","contextMap","cm","__cmap","pair","fp","debugFuncInstall","debugOut","__xArgAdapterCheck","__xResultAdapterCheck","convertArgNoCheck","convertResult","convertResultNoCheck","fArg","resultType","argTypes","fIsFunc","xf","cxw","__xAdapter","typeName","adapter","modeName","xcvPart","resultAdapter","argAdapter","testConvertResult","yawl","wui","finalThen","wasmUtilTarget","malloc","free","Jaccwabyt","StructBinderFactory","SBF","memberPrefix","memberSuffix","debugFlags","__makeDebugFlags","deriveFrom","__flags","setter","_flags","writable","isLittleEndian","DataView","setInt16","sigLetter","isFuncSig","sigIR","affirmBigIntArray","sPropName","__instancePointerMap","WeakMap","xPtrPropName","__freeStruct","ctor","delete","ondispose","StructType","structName","structInfo","sizeof","rop","__allocStruct","__memberKeyProp","__lookupMember","memberName","tossIfNotFound","members","values","__memberSignature","emscriptenFormat","__ptrPropDescriptor","__structMemberKeys","memberKey","__utf8Decoder","__utf8Encoder","__affirmCStringSignature","member","stringify","__addOnDispose","__allocCString","lookupMember","memberToJsString","__memberToJsString","memberIsString","__memberIsString","memberKeys","memberSignature","memoryDump","setMemberCString","__setMemberCString","addOnDispose","isA","hasExternalPointer","isNumericValue","isFinite","makeMemberWrapper","descr","getters","setters","sw","sigDVGetter","sigDVSetter","sigDVSetWrapper","rxSig1","rxSig2","sigCheck","sigGlyph","xPropName","dbg","prop","propName","readOnly","lastMember","StructCtor","externalMemory","methodInfoForKey","mKey","bindingSignatures","aNames","nCols","pColVals","pColNames","aVals","pV","iCode","s0","s1","s2","s3","sqlite3_activate_see","int64","zDb","zTbl","iKey1","iKey2","z0","z1","rowid","sqlite3changegroup_add","__ipsProxy","__xString","nilType","oo1","Stmt","DB","sqlite3_index_info","sqlite3_module","SQLITE_NOTFOUND","__xRcPtr","sqlite3_step","doArgcCheck","fI64Disabled","sqlite3_wasm_db_error","__db_err","msg","cJson","ctype","defineGroups","__rcMap","notThese","WasmTestStruct","sqlite3_kvvfs_methods","sqlite3_index_constraint","sqlite3_index_orderby","sqlite3_index_constraint_usage","structs","sqlite3_vtab_config","__dbArgcMismatch","__errEncoding","SQLITE_FORMAT","__argPDb","__argStr","__dbCleanupMap","dbMap","addCollation","collation","Set","_addUDF","arity","addFunction","udf","addWindowFunc","wudf","cleanup","closeArgs","sqlite3_create_collation_v2","SQLITE_UTF8","fmap","arities","fargs","clear","__sqlite3CloseV2","sqlite3_close_v2","sqlite3session_table_filter","__sqlite3SessionDelete","sqlite3session_delete","pSession","__sqlite3CreateCollationV2","zName","pArg","xCompare","sqlite3_create_collation","__cfProxy","xInverseAndStep","xFinalAndValue","__sqlite3CreateFunction","__sqlite3CreateWindowFunction","udfSetResult","udfConvertArgs","udfSetError","__flexiString","__prepare","basic","full","sqlLen","ppStmt","pzTail","xSql","xSqlLen","__bindText","__bindBlob","nText","sqlite3_db_handle","pMem","nMem","sqlite3_config","SQLITE_CONFIG_COVERING_INDEX_SCAN","SQLITE_CONFIG_MEMSTATUS","SQLITE_CONFIG_SMALL_MALLOC","SQLITE_CONFIG_SORTERREF_SIZE","SQLITE_CONFIG_STMTJRNL_SPILL","SQLITE_CONFIG_URI","sqlite3_wasm_config_i","SQLITE_CONFIG_LOOKASIDE","sqlite3_wasm_config_ii","SQLITE_CONFIG_MEMDB_MAXSIZE","sqlite3_wasm_config_j","SQLITE_CONFIG_GETMALLOC","SQLITE_CONFIG_GETMUTEX","SQLITE_CONFIG_GETPCACHE2","SQLITE_CONFIG_GETPCACHE","SQLITE_CONFIG_HEAP","SQLITE_CONFIG_LOG","SQLITE_CONFIG_MALLOC","SQLITE_CONFIG_MMAP_SIZE","SQLITE_CONFIG_MULTITHREAD","SQLITE_CONFIG_MUTEX","SQLITE_CONFIG_PAGECACHE","SQLITE_CONFIG_PCACHE2","SQLITE_CONFIG_PCACHE","SQLITE_CONFIG_PCACHE_HDRSZ","SQLITE_CONFIG_PMASZ","SQLITE_CONFIG_SERIALIZED","SQLITE_CONFIG_SINGLETHREAD","SQLITE_CONFIG_SQLLOG","SQLITE_CONFIG_WIN32_HEAPSIZE","__autoExtFptr","sqlite3_auto_extension","fPtr","sqlite3_cancel_auto_extension","sqlite3_reset_auto_extension","pKvvfs","kvvfsMethods","sqlite3_wasm_kvvfs_methods","kvvfsMakeKey","sqlite3_wasm_kvvfsMakeKeyOnPstack","kvvfsStorage","zClass","kvvfsImpls","xRead","zKey","zBuf","nBuf","astack","zXKey","jKey","jV","nV","zV","copyWithin","xWrite","zData","setItem","SQLITE_IOERR","xDelete","sqlite3_vfs_unregister","libVersion","libVersionNumber","sourceId","downloadVersion","__ptrMap","__stmtMap","getOwnOption","dflt","getOwnPropertyDescriptor","checkSqlite3Rc","sqliteResultCode","sqlite3_errmsg","sqlite3_errstr","__dbTraceToConsole","SQLITE_TRACE_STMT","counter","__vfsPostOpenSql","dbCtorHelper","_name2vfs","isWorkerThread","normalizeArgs","flagsStr","fnJs","vfsCheck","oflags","SQLITE_OPEN_CREATE","SQLITE_OPEN_READWRITE","SQLITE_OPEN_READONLY","SQLITE_OPEN_EXRESCODE","pPtr","sqlite3_open_v2","sqlite3_extended_result_codes","sqlite3_trace_v2","postInitSql","setVfsPostOpenSql","BindTypes","null","number","boolean","blob","bigint","parameterCount","sqlite3_bind_parameter_count","affirmDbOpen","affirmColIndex","stmt","ndx","columnCount","__selectFirstRow","getArgs","prepare","step","reset","finalize","__selectAll","rowMode","returnValue","checkRc","isOpen","affirmOpen","onclose","before","after","changes","sixtyFour","sqlite3_total_changes64","sqlite3_total_changes","sqlite3_changes64","sqlite3_changes","dbFilename","sqlite3_db_filename","dbNumber","sqlite3_db_name","dbVfsName","resultRows","returnVal","saveSql","cbArg","$colName","parseExecArgs","evalFirstResult","columnNames","isTA","pSql","pSqlEnd","sqlite3_sql","gotColNames","_lockedByExec","getColumnNames","row","createFunction","isFunc","isWindow","fFlags","SQLITE_DETERMINISTIC","SQLITE_DIRECTONLY","SQLITE_INNOCUOUS","xArity","arityArg","selectValue","asType","selectValues","selectArray","selectObject","selectArrays","selectObjects","openStatementCount","opener","savepoint","affirmStmtOpen","affirmSupportedBindType","isSupportedBindType","affirmNotLockedByExec","currentOpName","bindOne","bindType","_tooBigInt","asBlob","pStr","sqlite3_bind_parameter_index","affirmParamIndex","sqlite3_bind_null","sqlite3_bind_int","sqlite3_bind_int64","sqlite3_bind_double","_mayGet","sqlite3_finalize","clearBindings","sqlite3_clear_bindings","alsoClearBinds","sqlite3_reset","bindAsBlob","SQLITE_DONE","SQLITE_ROW","stepReset","stepFinalize","sqlite3_column_name","sqlite3_column_type","sqlite3_column_int64","sqlite3_column_double","sqlite3_column_text","sqlite3_column_bytes","sqlite3_column_blob","_blobXfer","getInt","getFloat","getString","getBlob","getJSON","SQLITE_STRING","getColumnName","getParamIndex","sqlite3_column_count","JsStorageDb","storageName","jdb","clearStorage","storageSize","initWorker1API","WorkerGlobalScope","getDbId","wState","idMap","idSeq","dbList","xfer","dbs","alsoUnlink","ddNdx","sqlite3_wasm_vfs_unlink","post","xferList","postMessage","getDb","require","getMsgDb","msgData","affirmExists","dbId","wMsgHandler","ev","oargs","simulateError","guessVfs","cause","persistent","doUnlink","theCallback","rowNumber","hadColNames","changeCount","countChanges","vfsList","opfsEnabled","opfs","export","mimetype","treeList","onmessage","evType","arrivalTime","operation","errorClass","messageId","workerReceivedTime","workerRespondTime","departureTime","vtab","sii","nthConstraint","asPtr","$nConstraint","$aConstraint","nthConstraintUsage","$aConstraintUsage","nthOrderBy","$nOrderBy","$aOrderBy","installMethod","applyArgcCheck","installMethodArgcCheck","argcProxy","removeFuncList","__removeFuncList","sigN","memKey","fProxy","pFunc","installMethods","structInstance","methods","seen","prior","mkey","registerVfs","asDefault","sqlite3_vfs_register","installVfs","propList","struct","StructPtrMapper","__xWrap","methodName","removeMapping","__xWrapFactory","pCObj","unget","xVtab","sqlite3_vtab","xCursor","sqlite3_vtab_cursor","xIndexInfo","pIdxInfo","xError","defaultRc","errorReporter","xRowid","ppRowid64","setupModule","createdMod","mod","xConnect","xDisconnect","catchExceptions","fwrap","pAux","ppVtab","pzErr","mnames","remethods","xCreate","$iVersion","iVersion","$xShadowName","$xSavePoint","$xRelease","$xRollbackTo","installOpfsVfs","options","Atomics","createSyncAccessHandle","storage","getDirectory","urlParams","searchParams","has","verbose","sanityChecks","proxyUri","defaultProxyUri","thePromise","promiseResolve_","promiseReject_","loggers","logImpl","level","sqlite3_file","sqlite3_io_methods","opfsUtil","metrics","dump","opIds","wait","avgTime","avgWait","s11n","W","serialize","deserialize","opfsIoMethods","opfsVfs","promiseWasRejected","promiseReject","promiseResolve","Worker","_originalOnError","pDVfs","dVfs","$szOsFile","$mxPathname","$xDlOpen","$xDlError","$xDlSym","$xDlClose","littleEndian","asyncIdleWaitTime","asyncS11nExceptions","fileBufferSize","sabS11nOffset","sabS11nSize","sabIO","whichOp","xAccess","xClose","xDeleteNoWait","xFileSize","xLock","xOpen","xSleep","xSync","xTruncate","xUnlock","retry","sabOP","sq3Codes","opfsFlags","OPFS_UNLOCK_ASAP","defaultUnlockAsap","opRun","opNdx","store","sabOPView","notify","load","asyncShutdown","asyncRestart","randomFilename","_chars","_n","random","__openFiles","opTimer","mTimeStart","mTimeEnd","ioSyncWrappers","xCheckReservedLock","pFile","lockType","sq3File","xDeviceCharacteristics","SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN","xFileControl","opId","pSz64","pDest","offset64","SQLITE_IOERR_SHORT_READ","sabView","SQLITE_IOERR_READ","sz64","SQLITE_LOCK_NONE","pSrc","SQLITE_IOERR_WRITE","vfsSyncWrappers","xCurrentTime","xCurrentTimeInt64","doSyncDir","xFullPathname","SQLITE_CANTOPEN","xGetLastError","pOutFlags","sqlite3_uri_boolean","fh","fid","sab","sabFileBufView","$pMethods","$xRandomness","$xSleep","xRandomness","getResolvedPath","splitIt","getDirForFilename","absFilename","createDirs","dh","rootDirectory","dirName","getDirectoryHandle","absDirName","entryExists","fsEntryName","getFileHandle","dirHandle","handle","kind","subDir","doDir","rmfr","recurse","removeEntry","recursive","throwOnError","hDir","filenamePart","traverse","defaultOpt","directory","depth","importDb","sah","fnamePart","hFile","nWrote","at","OpfsDb","oo1Db","sqlite3_busy_timeout","payload","io","sabS11nView","textDecoder","textEncoder","viewU8","viewDV","TypeIds","getTypeIdById","tid","typeIds","getInt32","setInt32","initS11n","openFlags","SQLITE_OPEN_MAIN_DB","dbFile","zDbFile","readBuf","jRead","sanityCheck","errMsg","proxyJs","sqlite3Dir","initPromises","HEADER_OFFSET_DATA","PERSISTENT_FILE_TYPES","SQLITE_OPEN_MAIN_JOURNAL","SQLITE_OPEN_SUPER_JOURNAL","SQLITE_OPEN_WAL","OPAQUE_DIR_NAME","getRandomName","optionDefaults","initialCapacity","clearOnInit","verbosity","__mapVfsToPool","getPoolForVfs","setPoolForVfs","pool","__mapSqlite3File","getPoolForPFile","setPoolForPFile","ioMethods","storeErr","getOFileForS3File","mapS3FileToOFile","flush","SQLITE_OPEN_DELETEONCLOSE","deletePath","getSize","nRead","xSectorSize","vfsMethods","hasFilename","SQLITE_IOERR_DELETE","popErr","cMsg","getSAHForPath","getFileCount","getCapacity","nextAvailableSAH","setAssociatedPath","OpfsSAHPool","vfsDir","HEADER_MAX_PATH_SIZE","createOpfsVfs","$error","addCapacity","getVfs","getFileNames","iter","ah","reduceCapacity","nRm","releaseAccessHandles","acquireAccessHandles","clearFiles","all","getAssociatedPath","getUint32","fileDigest","HEADER_DIGEST_SIZE","compDigest","computeDigest","every","pathBytes","findIndex","enc","encodeInto","written","setUint32","digest","h1","h2","prev","removeVfs","exportFile","OpfsSAHPoolUtil","sahPool","reserveMinimumCapacity","wipeFiles","installOpfsSAHPoolVfs","apiVersionCheck","$testThrowInInit","thePool","poolUtil","theVfs","OpfsSAHPoolDb","SABC","wasmExports","ready","toExportForESM","originalInit","initModuleState","moduleScript","isWorker","URLSearchParams","li","EmscriptenModule","sim","scriptDir"],"sourceRoot":""}