{"version":3,"file":"background.js","mappings":"mBAAO,MAAMA,EAAiB,iBACjBC,EAAa,aACbC,EAAY,YCOzB,IAAIC,EAJJC,OAAOC,QAAQC,YAAYC,aAAY,KACrCH,OAAOI,UAAUC,iBAAiB,CAAEC,wBAAwB,GAAO,IAIrEC,eAAsCC,SAG1BR,OAAOS,UAAUC,mBAGvBX,QACIA,GAENA,EAAWC,OAAOS,UAAUE,eAAe,CACzCC,IAAKZ,OAAOC,QAAQY,OA4FH,kBA3FjBC,QAAS,CACPd,OAAOS,UAAUM,OAAOC,SAAWhB,OAAOS,UAAUM,OAAOE,OAE7DC,cAAe,0CAEXnB,EACNA,EAAW,MAGbC,OAAOC,QAAQkB,UAAUhB,aAAYI,eACnCa,EACAC,EACAC,GAEIF,IACEA,EAAQG,MAAQ3B,GAAkBwB,EAAQI,IAAM3B,GAE9CwB,EAAOI,MACTL,EAAQM,MAAQL,EAAOI,IAAIE,IAIzBP,EAAQG,KAERH,EAAQI,GAERJ,EAAQQ,OAERR,EAAQS,WAERT,EAAQU,MAGZV,EAAQG,KAAO1B,EACfuB,EAAQI,GAAK1B,EAGTsB,EAAQG,KAERH,EAAQI,GAERJ,EAAQQ,OAERR,EAAQS,WAERT,EAAQU,MAGZ9B,OAAOC,QAAQ8B,YAAYX,IAClBA,EAAQG,MAAQzB,GAAasB,EAAQI,IAAM3B,IAGhDuB,EAAQG,KAERH,EAAQI,GAERJ,EAAQQ,OAERR,EAAQS,WAERT,EAAQU,MAGZV,EAAQG,KAAO1B,EACfuB,EAAQI,GAAK5B,EAGTwB,EAAQG,KAERH,EAAQI,GAERJ,EAAQQ,OAERR,EAAQS,WAERT,EAAQU,MAGRV,EAAQM,MAEV1B,OAAOgC,KAAKD,YAAYX,EAAQM,MAAON,GAIvCpB,OAAOC,QAAQ8B,YAAYX,IAInC,IACF,CAEAa,E","sources":["webpack://boss-show-time/./src/api/bridgeCommon.js","webpack://boss-show-time/./src/background.js"],"sourcesContent":["export const CONTENT_SCRIPT = \"CONTENT_SCRIPT\";\nexport const BACKGROUND = \"BACKGROUND\";\nexport const OFFSCREEN = \"OFFSCREEN\";\nexport const WEB_WORKER = \"WEB_WORKER\";\n","import { BACKGROUND, CONTENT_SCRIPT, OFFSCREEN } from \"./api/bridgeCommon\";\nimport { debugLog, infoLog } from \"./log\";\n\ndebugLog(\"background ready\");\n//sidepanel\nchrome.runtime.onInstalled.addListener(() => {\n  chrome.sidePanel.setPanelBehavior({ openPanelOnActionClick: true });\n});\n\nlet creating;\nasync function setupOffscreenDocument(path) {\n  // Check all windows controlled by the service worker to see if one\n  // of them is the offscreen document with the given path\n  if (await chrome.offscreen.hasDocument?.()) return;\n\n  // create offscreen document\n  if (creating) {\n    await creating;\n  } else {\n    creating = chrome.offscreen.createDocument({\n      url: chrome.runtime.getURL(path),\n      reasons: [\n        chrome.offscreen.Reason.WORKERS || chrome.offscreen.Reason.BLOBS,\n      ],\n      justification: \"To run web worker to run sqlite\",\n    });\n    await creating;\n    creating = null;\n  }\n\n  chrome.runtime.onMessage.addListener(async function (\n    message,\n    sender,\n    sendResponse\n  ) {\n    if (message) {\n      if (message.from == CONTENT_SCRIPT && message.to == BACKGROUND) {\n        //get the tab id from content script page,not the extension page(eg: sidepanel)\n        if (sender.tab) {\n          message.tabId = sender.tab.id;\n        }\n        debugLog(\n          \"2.[background][receive][\" +\n            message.from +\n            \" -> \" +\n            message.to +\n            \"] message [action=\" +\n            message.action +\n            \",callbackId=\" +\n            message.callbackId +\n            \",error=\" +\n            message.error +\n            \"]\"\n        );\n        message.from = BACKGROUND;\n        message.to = OFFSCREEN;\n        debugLog(\n          \"3.[background][send][\" +\n            message.from +\n            \" -> \" +\n            message.to +\n            \"] message [action=\" +\n            message.action +\n            \",callbackId=\" +\n            message.callbackId +\n            \",error=\" +\n            message.error +\n            \"]\"\n        );\n        chrome.runtime.sendMessage(message);\n      } else if (message.from == OFFSCREEN && message.to == BACKGROUND) {\n        debugLog(\n          \"10.[background][receive][\" +\n            message.from +\n            \" -> \" +\n            message.to +\n            \"] message [action=\" +\n            message.action +\n            \",callbackId=\" +\n            message.callbackId +\n            \",error=\" +\n            message.error +\n            \"]\"\n        );\n        message.from = BACKGROUND;\n        message.to = CONTENT_SCRIPT;\n        debugLog(\n          \"11.[background][send][\" +\n            message.from +\n            \" -> \" +\n            message.to +\n            \"] message [action=\" +\n            message.action +\n            \",callbackId=\" +\n            message.callbackId +\n            \",error=\" +\n            message.error +\n            \"]\"\n        );\n        if (message.tabId) {\n          //content script invoke\n          chrome.tabs.sendMessage(message.tabId, message);\n        } else {\n          //other invoke\n          //Note that extensions cannot send messages to content scripts using this method. To send messages to content scripts, use tabs.sendMessage.\n          chrome.runtime.sendMessage(message);\n        }\n      }\n    }\n  });\n}\n\nsetupOffscreenDocument(\"offscreen.html\");\n"],"names":["CONTENT_SCRIPT","BACKGROUND","OFFSCREEN","creating","chrome","runtime","onInstalled","addListener","sidePanel","setPanelBehavior","openPanelOnActionClick","async","path","offscreen","hasDocument","createDocument","url","getURL","reasons","Reason","WORKERS","BLOBS","justification","onMessage","message","sender","sendResponse","from","to","tab","tabId","id","action","callbackId","error","sendMessage","tabs","setupOffscreenDocument"],"sourceRoot":""}