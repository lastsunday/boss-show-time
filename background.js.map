{"version":3,"file":"background.js","mappings":"mBAQA,IAAIA,EAJJC,OAAOC,QAAQC,YAAYC,aAAY,KACrCH,OAAOI,UAAUC,iBAAiB,CAAEC,wBAAwB,GAAO,IAIrEC,eAAsCC,GAoBpC,IAAIC,QAjBMT,OAAOU,UAAUC,mBAGvBZ,QACIA,GAENA,EAAWC,OAAOU,UAAUE,eAAe,CACzCC,IAAKb,OAAOC,QAAQa,OAwEH,kBAvEjBC,QAAS,CACPf,OAAOU,UAAUM,OAAOC,SAAWjB,OAAOU,UAAUM,OAAOE,OAE7DC,cAAe,0CAEXpB,EACNA,EAAW,MAIbC,OAAOC,QAAQmB,UAAUjB,aAAY,SAAUkB,GAC7CZ,EAAeY,EACfA,EAAKC,UAAUnB,aAAY,SAAUoB,GAkDvC,IAAsCC,EA/C9BD,EAAQE,OAERF,EAAQG,WAERH,EAAQI,MA2CsBH,EAxCDD,EAyCnCvB,OAAOC,QAAQ2B,YAAY,CACzBC,KA1CuB,SA2CvBC,OAAQ,YACRN,SAzCID,EAAQE,OAERF,EAAQG,WAERH,EAAQI,KAGd,GACF,IAEA3B,OAAOC,QAAQqB,UAAUnB,aAAa4B,IACpC,IAAIR,EAAUQ,EAAMP,KAGhBD,EAAQE,OAERF,EAAQG,WAERH,EAAQI,MAed,SAAoCJ,GAClCd,EAAauB,YAAYT,EAC3B,CAdEU,CAA2BV,GAGvBA,EAAQE,OAERF,EAAQG,WAERH,EAAQI,KAEX,IAcL,CAEAO,E","sources":["webpack://boss-show-time/./src/background.js"],"sourcesContent":["import { debugLog } from \"./log\";\n\ndebugLog(\"background ready\");\n//sidepanel\nchrome.runtime.onInstalled.addListener(() => {\n  chrome.sidePanel.setPanelBehavior({ openPanelOnActionClick: true });\n});\n\nlet creating;\nasync function setupOffscreenDocument(path) {\n  // Check all windows controlled by the service worker to see if one\n  // of them is the offscreen document with the given path\n  if (await chrome.offscreen.hasDocument?.()) return;\n\n  // create offscreen document\n  if (creating) {\n    await creating;\n  } else {\n    creating = chrome.offscreen.createDocument({\n      url: chrome.runtime.getURL(path),\n      reasons: [\n        chrome.offscreen.Reason.WORKERS || chrome.offscreen.Reason.BLOBS,\n      ],\n      justification: \"To run web worker to run sqlite\",\n    });\n    await creating;\n    creating = null;\n  }\n\n  var portInstance;\n  chrome.runtime.onConnect.addListener(function (port) {\n    portInstance = port;\n    port.onMessage.addListener(function (message) {\n      debugLog(\n        \"[background][receive][content script -> background] message [action=\" +\n          message.action +\n          \",callbackId=\" +\n          message.callbackId +\n          \",error=\" +\n          message.error +\n          \"]\"\n      );\n      sendMessageToOffscreen(\"bridge\", message);\n      debugLog(\n        \"[background][send][background -> offscreen] message [action=\" +\n          message.action +\n          \",callbackId=\" +\n          message.callbackId +\n          \",error=\" +\n          message.error +\n          \"]\"\n      );\n    });\n  });\n\n  chrome.runtime.onMessage.addListener((event) => {\n    var message = event.data;\n    debugLog(\n      \"[background][receive][offscreen -> background] message [action=\" +\n        message.action +\n        \",callbackId=\" +\n        message.callbackId +\n        \",error=\" +\n        message.error +\n        \"]\"\n    );\n    sendMessageToContentScript(message);\n    debugLog(\n      \"[background][send][background -> content script] message [action=\" +\n        message.action +\n        \",callbackId=\" +\n        message.callbackId +\n        \",error=\" +\n        message.error +\n        \"]\"\n    );\n  });\n\n  function sendMessageToContentScript(message) {\n    portInstance.postMessage(message);\n  }\n\n  function sendMessageToOffscreen(type, data) {\n    chrome.runtime.sendMessage({\n      type,\n      target: \"offscreen\",\n      data,\n    });\n  }\n}\n\nsetupOffscreenDocument(\"offscreen.html\");\n"],"names":["creating","chrome","runtime","onInstalled","addListener","sidePanel","setPanelBehavior","openPanelOnActionClick","async","path","portInstance","offscreen","hasDocument","createDocument","url","getURL","reasons","Reason","WORKERS","BLOBS","justification","onConnect","port","onMessage","message","data","action","callbackId","error","sendMessage","type","target","event","postMessage","sendMessageToContentScript","setupOffscreenDocument"],"sourceRoot":""}